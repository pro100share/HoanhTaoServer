--[[功能：修行系统类作者：曲莹时间：2013-07-30]]_G.CPracticeSystem = {};function CPracticeSystem:new()	local obj = CSystem:new("CPracticeSystem");	obj.objDBQuery = nil;    --对应的数据库操作模	for i,v in pairs(CPracticeSystem) do		if type(v) == "function" then			obj[i] = v;		end;	end; 	return obj;end;function CPracticeSystem:Create(bIsChangeLine)	local objPlayer = self:GetPlayer();	if not objPlayer then		return;	end;	local objDB = objPlayer:GetDBQuery();	if not objDB then		return false;	end;	self.objDBQuery = CPracticeSystemDB:new(objDB, self);	self.dwPractice = "";	self.dwCurActiveLevel = 0; 	self.dwCurProgress = 0;	self.dwCurHideLevel = 0;	local info = objPlayer:GetLineData("CPracticeSystem")[1];	if info then			self:SetPracticeInfo(info[1]);	end;	return true;end;--解析修行阶段function CPracticeSystem:SetPracticeInfo(info)		self.dwCurActiveLevel = info.dwCurLevel; 	self.dwCurProgress = info.dwCurProgress; 	self.dwCurHideLevel = info.dwCurHideLevel or 0;	if(self.dwCurHideLevel > 0) then		self:AddPracticeHideProperty()	end	self:AppendPracticeProperty();end;--进入游戏同步消息function CPracticeSystem:OnEnterScene()	local objPlayer = self:GetPlayer();	if not objPlayer then		return;	end;	objPlayer.SendPracticeInfoMsg{CurActiveLevel = self.dwCurActiveLevel, CurProgress = self.dwCurProgress,CurHideAttrLevel = self.dwCurHideLevel};end;--设置修行阶数function CPracticeSystem:UpdatePracticeLevel(dwLevel)	local objPlayer = self:GetPlayer();	if not objPlayer then		return;	end;	if dwLevel < 0 then		return;	end;	local dwCurPractice = dwLevel + 1;	if not _G.BookConfig[dwCurPractice] then		return;	end;	self.dwCurActiveLevel = dwLevel;	self.dwCurProgress = 0;	self:BroadCastPractice();	self.objDBQuery:UpdatePracticeInfo(objPlayer:GetRoleID(), self.dwCurActiveLevel, self.dwCurProgress)	self:AppendPracticeProperty();	objPlayer.SendPracticeInfoMsg{CurActiveLevel = dwLevel, CurProgress = self.dwCurProgress};end;function CPracticeSystem:EventGetAuthority(szAuthName)	-- if szAuthName == "ZhuangBeiXiuLian" then		-- self:SendEquipBuildInfo();	-- endend;function CPracticeSystem:Destroy()	end;function CPracticeSystem:OnChangeLineBegin()	local objPlayer = self:GetPlayer()	if not objPlayer then		return;	end;	local info = {};	info.dwCurLevel = self.dwCurActiveLevel;	info.dwCurProgress = self.dwCurProgress;	info.dwCurHideLevel = self.dwCurHideLevel;	local tbl = {};	table.insert(tbl, info);	objPlayer:SetLineData("CPracticeSystem",tbl);end;--请求增加修行领悟值  bUseGold:true为元宝， bAutoBuy为自动购买, bUseUnBindFirst:为优先使用非绑定function CPracticeSystem:AddPractice(bAutoBuy, bUseGold, bUseUnBindFirst)	local objPlayer = self:GetPlayer();	if not objPlayer then		return;	end;	local itemSystem = objPlayer:GetSystem("CItemSystem");	if not itemSystem then		_err("Not get ItemSystem by AddPractice");		objPlayer.SendAddPracticeMsg{AddPracticeValue = 0, CritType = 0};		return;	end;	local dwCurPractice = self.dwCurActiveLevel + 1;	if not _G.BookConfig[dwCurPractice] then		objPlayer.SendAddPracticeMsg{AddPracticeValue = 0, CritType = 0};		return;	end;	local needEnumId = _G.BookConfig[dwCurPractice].dwNeedEnumId;	local needNum = _G.BookConfig[dwCurPractice].dwCounsume;	--检测背包中是否有足够古书注解	local b_IsEnough_1, n_Minus_1 = itemSystem:CheckDelEnumItemInPacketCond(needEnumId, needNum);	--用于自动购买	local autoBuyInfo = {};	if not b_IsEnough_1 then		if bAutoBuy then			local t = {};			t.dwItemEnum 	= needEnumId;			t.dwItemNumber 	= n_Minus_1;			table.insert(autoBuyInfo, t);		else--材料不够而且不是自动购买则返回			_info("----AddPractice----");			objPlayer.SendAddPracticeMsg{AddPracticeValue = 0, CritType = 0};			return;		end;	end;	--如果自动购买列表不为空则执行自动购买逻辑	if #autoBuyInfo > 0 then		local mallSystem = objPlayer:GetSystem("CMallSystem");		if not mallSystem then			_err("get mallSystem error!!! by AddPractice");			objPlayer.SendAddPracticeMsg{AddPracticeValue = 0, CritType = 0};			return;		end;		if bUseGold then			for k, v in pairs(autoBuyInfo) do				local buySuc = mallSystem:BuyItemByIDGold(v.dwItemNumber, v.dwItemEnum)				if not buySuc then					_err("auto buy error!!! by AddPractice");					objPlayer.SendAddPracticeMsg{AddPracticeValue = 0, CritType = 0};					return				end;			end;		else			for k, v in pairs(autoBuyInfo) do				local buySuc = mallSystem:BuyItemByIDBindGold(v.dwItemNumber, v.dwItemEnum)				if not buySuc then					_err("auto buy error!!! by AddPractice");					objPlayer.SendAddPracticeMsg{AddPracticeValue = 0, CritType = 0};					return				end;			end;		end		--检测背包中是否有足够强化石		b_IsEnough_1, n_Minus_1 = itemSystem:CheckDelEnumItemInPacketCond(needEnumId, needNum);		if not b_IsEnough_1 then  _info("----AddPractice1-----"); 			objPlayer.SendAddPracticeMsg{AddPracticeValue = 0, CritType = 0};			return 		end;	end;	--删除各种石头--删除物品通知	itemSystem:DelEnumItemInPacket(needEnumId, needNum, bUseUnBindFirst, _G.ItemSysOperType.Practice);	local addRealizeValue, critType = _G.PracticeFunConfig.AddRealizeValue(dwCurPractice, objPlayer);	self.dwCurProgress = self.dwCurProgress + addRealizeValue;	if (self.dwCurProgress > 0) then		if self.dwCurProgress >= _G.BookConfig[dwCurPractice]["dwValue"] then			self.dwCurActiveLevel = self.dwCurActiveLevel + 1;			self.dwCurProgress = 0;			self:BroadCastPractice();		end;	end;	self.objDBQuery:UpdatePracticeInfo(objPlayer:GetRoleID(), self.dwCurActiveLevel, self.dwCurProgress)	objPlayer.SendAddPracticeMsg{AddPracticeValue = addRealizeValue, CritType = critType};	self:AppendPracticeProperty();end;function CPracticeSystem:AppendPracticeProperty()	local objPlayer = self:GetPlayer();	if not objPlayer then		return;	end;	local PracticeProperty = {		dwHPMax = 0,  --血量max		dwMPMax = 0,	--内力max		dwAttack = 0,	--攻击		dwDefense = 0, --防御		dwFlee = 0,	--身法		dwCrit = 0,	--暴击		dwMoveSpeed = 0,   --移动速度		dwAttackSpeed = 0,   --攻击速度	}	local skillSystem = objPlayer:GetSystem("CSkillSystem");	--每个槽位增加的属性	for i = 0, self.dwCurActiveLevel do		if _G.BookConfig[i] then			for index, value in pairs(_G.BookConfig[i].dwPropertyAttribute) do					if PracticeProperty[index] then					PracticeProperty[index] = PracticeProperty[index] + value;				end;			end;		end;	end;	local t_attr = _G.SSingleAttrChange:new();	if PracticeProperty then		t_attr.dwHPMax	= PracticeProperty["dwHPMax"] or 0;	   --生命max		t_attr.dwMPMax	= PracticeProperty["dwMPMax"] or 0;    --内力max		t_attr.dwAttack	= PracticeProperty["dwAttack"] or 0;   --攻击		t_attr.dwDefense= PracticeProperty["dwDefense"] or 0;  --防御		t_attr.dwFlee	= PracticeProperty["dwFlee"] or 0;	   --身法		t_attr.dwCrit	= PracticeProperty["dwCrit"] or 0;	   --暴击		t_attr.dwMoveSpeed = PracticeProperty["dwMoveSpeed"] or 0;	--移动速度		skillSystem:NotifyPracticeProperty(t_attr,1);	end;end;--获得修行值function CPracticeSystem:GetPracticeLevel()	return self.dwCurActiveLevel + 1;end;function CPracticeSystem:GetPracticeProgress()	return self.dwCurProgressend;function CPracticeSystem:AddPracticeProgress(addRealizeValue, dwCritType)	local objPlayer = self:GetPlayer();	if not objPlayer then		return;	end;	if not addRealizeValue then		return;	end;	local dwCurPractice = self.dwCurActiveLevel + 1;	if not _G.BookConfig[dwCurPractice] then		objPlayer.SendAddPracticeMsg{AddPracticeValue = 0, CritType = 0};		return;	end;	self.dwCurProgress = self.dwCurProgress + addRealizeValue;	if (self.dwCurProgress > 0) then		if self.dwCurProgress >= _G.BookConfig[dwCurPractice]["dwValue"] then			self.dwCurActiveLevel = self.dwCurActiveLevel + 1;			self.dwCurProgress = 0;			self:BroadCastPractice();		end;	end;	self.objDBQuery:UpdatePracticeInfo(objPlayer:GetRoleID(), self.dwCurActiveLevel, self.dwCurProgress)	objPlayer.SendAddPracticeMsg{AddPracticeValue = addRealizeValue, CritType = dwCritType};	self:AppendPracticeProperty();end;function CPracticeSystem:BroadCastPractice()	if self.dwCurActiveLevel < _G.PracticeConfig.dwPracticeBroadcastLevel then		return;	end;	local objPlayer = self:GetPlayer();	if not objPlayer then		_err("Cannot get player on CPracticeSystem:BroadCastPractice");		return;	end;	--玩家姓名	local s_PlayerName = objPlayer:GetInfo().szRoleName;	--玩家RoleID	local n_PlayerRoleID = objPlayer:GetInfo().dwRoleID;	--全服广播	CGameApp.PracticeSys_BroadCastMsg{        PlayerName = s_PlayerName,        PlayerRoleID = n_PlayerRoleID,		CurLevel = self.dwCurActiveLevel,		};end;function CPracticeSystem:ResetPracticeProgress()		self.dwCurProgress = 0;end;--通过修行系统设置杀怪经验参数function CPracticeSystem:GetAddExpParam()	local objPlayer = self:GetPlayer();	if not objPlayer then		return;	end;	local addExpParam = _G.PracticeFunConfig.AddExpParam(self.dwCurActiveLevel, objPlayer);	return addExpParam or 0;end;-------------------------------------------------------------------------------------------------------------------------查看对方修行值--------------------------------------------------------------------------------------------------------------------------function CPracticeSystem:ViewOtherPractice(fromRoleID)	local objPlayer = self:GetPlayer(); 	if not objPlayer then		return;	end;	_G.GSRemoteCall(fromRoleID, "CPracticeSystem", "BeViewPracticeInfo", {objPlayer:GetRoleID()}, nil);end;function CPracticeSystem:BeViewPracticeInfo(dwRoleId)	local objPlayer = self:GetPlayer();	if not objPlayer then		_G.GSRemoteCall(dwRoleId, "CPracticeSystem", "ViewPracticeResult", {false, 0, 0}, nil);		return;	end;	_G.GSRemoteCall(dwRoleId, 		"CPracticeSystem", 		"ViewPracticeResult", 		{true, 			self.dwCurActiveLevel, 			self.dwCurProgress,			self.dwCurHideLevel,			-- 王凌波添加			self:GetPlayer():GetSystem("CKungFuExtendSystem"):				GetCount(KungFuEnum.Practice)}, 		nil);end;--返回查看结果function CPracticeSystem:ViewPracticeResult(isOK, level, progress, hidelevel, nCount)	local objPlayer = self:GetPlayer();	if not objPlayer then		_err("Cannot get player by CPracticeSystem:ViewPracticeResult");		return;	end;	objPlayer.ReceivePlayerPracitceInfoMsg{IsOK = isOK, 		CurActiveLevel = level, 		CurProgress = progress,		CurHideAttrLevel = hidelevel,		-- 王凌波添加		nCount = nCount};end;--[[	[\brief 获取修行系统当前的阶数(供外部调用的接口)	[\return number 修行系统当前的阶数	[王凌波添加，扩展需要	]]function CPracticeSystem:getLevel()	return self.dwCurActiveLevelend