--[[功能：成就系统类（服务器）版本：v1.0作者：郭肇义时间：2012-04-12修改: 粟宇征时间: 2012-12-05]]_G.CAchievementSystem = {};function CAchievementSystem:new()	local obj = CSystem:new("CAchievementSystem");	for index, value in pairs(CAchievementSystem) do		if type(value) == "function" then			obj[index] = value;		end;	end;	return obj;end;----------------------------------------------------------------------------------function CAchievementSystem:Create()	--获取Player	local objPlayer = self:GetPlayer();	if not objPlayer then		_err("CAchievementSystem Create Cannot get player");		return false;	end;	--初始化DB	local objDB = objPlayer:GetDBQuery();	if not objDB then		_err("CAchievementSystem Create Cannot get DBQuery");		return false;	end;	self.objDBQuery = CAchievementSystemDB:new(objDB, self);		--获取成就信息	local tabDataList = objPlayer:GetLineData("CAchievementSystem")	self.tabAchievementList = {}	for _,v in pairs(tabDataList or {}) do		for key,value in pairs(v) do			self.tabAchievementList[value.dwAchievementID] = value		end	end	--生成序列成就信息	for dwAchievementID,tabInfo in pairs(self.tabAchievementList) do		local tabConfig = AchievementConfig[dwAchievementID]		local dwNext = tabConfig.tabCondition.dwNext		while(dwNext) do			local tabTemp = self.tabAchievementList[dwNext]			if not tabTemp then				tabTemp = {}				tabTemp.dwAchievementID = dwNext				tabTemp.dwProgress = 0				self.tabAchievementList[dwNext] = tabTemp			end			if tabTemp.dwProgress < tabInfo.dwProgress then				tabTemp.dwProgress = tabInfo.dwProgress			end			dwNext = AchievementConfig[dwNext].tabCondition.dwNext		end	end	--获取成就条件	self.tabConditionList = self:GetConditionList()	self.tabEventList = self:GetEventList(self.tabConditionList)		self:CountAttribute();		--勋章	local tabData = objPlayer:GetLineData("CAchievementSystem_Medal")[1]	self.dwAchievePointPlus = tabData.dwAchievePointPlus;	self.setActiveMedal = tabData.setActiveMedal;	self:CountMedalAttr();		return true;end;function CAchievementSystem:Update(dwInterval)	return true;end;function CAchievementSystem:Destroy()end;function CAchievementSystem:OnEnterScene()	local tabHideAchievementList = CAchievementSystemManager:GetHideAchievementList();	self:GetPlayer().OnAllHideAchievementMsg{tData = tabHideAchievementList};	self:RefreshTip();end;function CAchievementSystem:OnChangeLineBegin(dwNewLineID)	local dwCount = 0	local temp = {}	for k,v in pairs(self.tabAchievementList) do		dwCount = dwCount + 1		table.insert(temp,v)		if dwCount >= 20 then			self:GetPlayer():SetLineData("CAchievementSystem",temp)			dwCount = 0			temp = {}		end	end	local objSelf = self:GetPlayer();		objSelf:SetLineData("CAchievementSystem",temp)		local tabData = {};	tabData.dwAchievePointPlus = self.dwAchievePointPlus;	tabData.setActiveMedal = self.setActiveMedal;		objSelf:SetLineData("CAchievementSystem_Medal",tabData)end------------------------------------------------------------------------------------接口------------------------------------------------------------------------------------获取成就信息function CAchievementSystem:GetInfo()	return self.tabAchievementListend--获取所有成就点数function CAchievementSystem:GetAchievementAllPoint()	local dwAllPoint = 0;	for key,value in pairs(self.tabAchievementList or {}) do		if value.eState == _G.enAchievementState.eReward then			dwAllPoint = dwAllPoint + AchievementConfig[key].tabReward.dwPoint;		end	end	return dwAllPoint;end--领取成就奖品function CAchievementSystem:GetReward(dwAchievementID)	if self:IsValidReward(dwAchievementID) then		self:DoGetReward(dwAchievementID)		local tabAchievement = self.tabAchievementList[dwAchievementID]		self.objDBQuery:SetAchievement(tabAchievement)		self:GetPlayer():GetSystem("CPlayerEventCenterSystem"):DoEvent(			enumPlayerEventType.EventAchievementReward,			1,			dwAchievementID,			AchievementConfig[dwAchievementID].tabReward.dwPoint,			self:ParseGeneralPoint()		)		self:GetPlayer().OnGetAchievementStateInfoMsg{			AchievementID = dwAchievementID,			tAchievement = tabAchievement,		}		self:RefreshTip()	endend--获取其他玩家IDfunction CAchievementSystem:GetPlayerID(szRoleName)	local tabPlayerList = CMapManager:GetPlayer();	for dwRoleID, objPlayer in pairs(tabPlayerList) do		local szName = objPlayer:GetInfo().szRoleName		if szRoleName == szName then			return dwRoleID		end	endend--获得玩家信息function CAchievementSystem:GetRoleInfo()	local tabData = {}	local tabInfo = self:GetPlayer():GetInfo()	tabData.dwRoleID = tabInfo.dwRoleID	tabData.dwIncoID = self:GetPlayer():GetIncoID()	tabData.szRoleName = tabInfo.szRoleName	tabData.dwNumber = CChartManager:GetChartNumber(		enChartType.eAchievement,'dwRoleID',tabInfo.dwRoleID	)	return tabDataend--获得玩家比较信息function CAchievementSystem:GetCompareInfo(dwTarID)	local dwResID = self:GetPlayer():GetInfo().dwRoleID	local fnCallBack = function(dwRoleID,dwCode)		if dwCode == -1 then			self:GetPlayer().OnAchievementNoticeMsg { Type = 1, StringID = 6000810011 }		end	end	GSRemoteCall(dwTarID,"CAchievementSystem","SentCompareInfo",{dwResID},fnCallBack);endfunction CAchievementSystem:SentCompareInfo(dwResID)	local tabTarInfo = self:GetInfo()	local tabTarRole = self:GetRoleInfo()		local titleInfo = self:ParseHeadInfo(tabTarInfo,tabTarRole)	titleInfo.dwRoleID = tabTarRole.dwRoleID		local contentInfo = self:ParseTotalInfo(tabTarInfo)		GSRemoteCall(dwResID,"CAchievementSystem","OnSentCompareInfo",{titleInfo,contentInfo})endfunction CAchievementSystem:OnSentCompareInfo(titleInfo,contentInfo)	local dwNumber = CChartManager:GetChartNumber(enChartType.eAchievement,'dwRoleID',self:GetPlayer():GetRoleID())		self:GetPlayer().OnGetAchievementCompareInfoMsg { TitleInfo = titleInfo,ContentInfo = contentInfo,SelfChartNumber = dwNumber }end--获得玩家查看信息function CAchievementSystem:GetOtherInfo(dwTarID)	local dwResID = self:GetPlayer():GetInfo().dwRoleID	local fnCallBack = function(dwRoleID,dwCode)		if dwCode == -1 then			self:GetPlayer().OnAchievementNoticeMsg { Type = 1, StringID = 6000810011 }		end	end	GSRemoteCall(dwTarID,"CAchievementSystem","SentOtherInfo",{dwResID},fnCallBack);endfunction CAchievementSystem:SentOtherInfo(dwResID)	local tabInfo = self:GetInfo()	local tabRole = self:GetRoleInfo()	GSRemoteCall(dwResID,"CAchievementSystem","OnSentOtherInfo",{ tabInfo,tabRole })endfunction CAchievementSystem:OnSentOtherInfo(tabInfo,tabRole)	local objPlayer = self:GetPlayer()	objPlayer.OnGetAchievementOtherInfoMsg { TabInfo = {},TabRole = {msgState = 1}}		local tabTemp,dwCount = {},0;	for k,v in pairs(tabInfo) do		tabTemp[k] = v;		dwCount = dwCount + 1;		if dwCount >= 20 then			objPlayer.OnGetAchievementOtherInfoMsg { TabInfo = tabTemp, TabRole = {msgState = 2}};			tabTemp,dwCount = {},0;		end	end		tabRole.msgState = 3;	objPlayer.OnGetAchievementOtherInfoMsg { TabInfo = tabTemp, TabRole = tabRole};end------------------------------------------------------------------------------------响应----------------------------------------------------------------------------------function CAchievementSystem:OnEventCenter(szEvent, ...)	if not self.tabEventList then return end	if not self.tabEventList[szEvent] then return end	local tabTemp = {}	for k,v in pairs(self.tabEventList[szEvent]) do		tabTemp[k] = v	end	for dwAchievementID in pairs(tabTemp) do		self:UpdateAchievement(dwAchievementID,...)	endend------------------------------------------------------------------------------------私有------------------------------------------------------------------------------------更新成就信息function CAchievementSystem:UpdateAchievement(dwAchievementID,...)	local tabCondition = self.tabConditionList[dwAchievementID]	local tabAchievement = self.tabAchievementList[dwAchievementID]	local dwProgress = 0	if tabAchievement then dwProgress = tabAchievement.dwProgress end	local bFlag	if type(tabCondition.fnCheck) == 'function' then		bFlag = tabCondition.fnCheck(dwProgress,...)	end	if type(tabCondition.fnCheck) == 'table' then		bFlag = true		for _,fnCheck in pairs(tabCondition.fnCheck) do			bFlag = bFlag and fnCheck(dwProgress,...)		end	end	if not bFlag then return end	local dwCount = tabCondition.fnCount(dwProgress,...)	if dwCount <= dwProgress then return end	if not tabAchievement then		tabAchievement = {}		tabAchievement.dwAchievementID = dwAchievementID		tabAchievement.dwProgress = 0		self.tabAchievementList[dwAchievementID] = tabAchievement		self.objDBQuery:AddAchievement(tabAchievement)	end	self:UpdateProgress(dwAchievementID,dwCount,true)end--更新成就进度function CAchievementSystem:UpdateProgress(dwAchievementID,dwProgress,bRecord)	local tabCondition = self.tabConditionList[dwAchievementID]	local tabAchievement = self.tabAchievementList[dwAchievementID]	if not tabAchievement then		tabAchievement = {}		tabAchievement.dwAchievementID = dwAchievementID		tabAchievement.dwProgress = 0		self.tabAchievementList[dwAchievementID] = tabAchievement		self.objDBQuery:AddAchievement(tabAchievement)	end	if (not tabCondition) or (not tabAchievement) then		print('Err CAchievementSystem:UpdateProgress',dwAchievementID)		return	end	if dwProgress <= tabAchievement.dwProgress then return end	if dwProgress >= tabCondition.dwValue and tabAchievement.eState ~= enAchievementState.eComplete then		--更新达成		tabAchievement.dwProgress = tabCondition.dwValue		tabAchievement.eState = enAchievementState.eComplete		tabAchievement.dwDate = GetCurTime()		self:GetPlayer().OnGetAchievementStateInfoMsg{			AchievementID = dwAchievementID,			tAchievement = tabAchievement,		}		local objSystem = self:GetPlayer():GetSystem("CPlayerEventCenterSystem")		local szEvent = enumPlayerEventType.EventAchievementComplete		objSystem:DoEvent(szEvent,1,dwAchievementID)		local tabContent = AchievementConfig[dwAchievementID].tabContent		--更新广播		if tabContent.bNotice then			local tabInfo = {}			tabInfo.szRoleName = self:GetPlayer():GetInfo().szRoleName			tabInfo.szAchievementName = tabContent.szName			local szText = AchievementBroadCastConfig.szText			szText = self:ParseBroadCast(szText,tabInfo)			local tabPlayerList = CMapManager:GetPlayer()			local dwRoleID = self:GetPlayer():GetRoleID()			for _, objPlayer in pairs(tabPlayerList) do				objPlayer.OnAchievementBroadCastMsg { RoleID = dwRoleID,Text = szText }			end		end		--隐藏成就		if tabContent.bIsHide then			if not CAchievementSystemManager:IsHaveHideAchievement(dwAchievementID) then				local dwRoleID = self:GetPlayer():GetRoleID();				local szRoleName = self:GetPlayer():GetInfo().szRoleName;				CKernelApp.KSAddHideAchievementMsg {					AchievementID = dwAchievementID,RoleID = dwRoleID,RoleName = szRoleName				}			end		end		--更新事件		self.tabEventList[tabCondition.szEvent][dwAchievementID] = nil		--更新提示		self:RefreshTip()	elseif dwProgress < tabCondition.dwValue then		tabAchievement.dwProgress = dwProgress	end	if bRecord then		--通知客户端更新成就进度		self:GetPlayer().OnGetAchievementProgressInfoMsg{AchievementID = dwAchievementID,Progress = dwProgress};		--更新数据库		self.objDBQuery:SetAchievement(tabAchievement)	end	--更新序列成就	if tabCondition.dwNext then		local tabNext = self.tabAchievementList[tabCondition.dwNext]		if not tabNext then			tabNext = {}			tabNext.dwAchievementID = tabCondition.dwNext			tabNext.dwProgress = 0			self.tabAchievementList[tabCondition.dwNext] = tabNext		end		if tabAchievement.eState then			self.tabEventList[tabCondition.szEvent][tabCondition.dwNext] = true			self.objDBQuery:AddAchievement(tabNext)			self:UpdateProgress(tabCondition.dwNext,dwProgress,true)		else			self:UpdateProgress(tabCondition.dwNext,dwProgress,false)		end	endend--获取成就条件表function CAchievementSystem:GetConditionList()	local tabConditionList = {}	for _,tabListInfo in pairs(AchievementListConfig) do		for _,dwAchievementID in pairs(tabListInfo.tabAchievementList) do			tabConditionList[dwAchievementID] = AchievementConfig[dwAchievementID].tabCondition		end	end--	for _,dwAchievementID in pairs(AchievementSpecailList) do--		tabConditionList[dwAchievementID] = AchievementConfig[dwAchievementID].tabCondition--	end	return tabConditionListend--获取成就事件表function CAchievementSystem:GetEventList(tabConditionList)	local tabEventList = {}	local fnInsert = function(dwAchievementID,tabCondition)		local tabAchievement = self.tabAchievementList[dwAchievementID]		if tabAchievement and tabAchievement.eState then return end		if tabCondition.dwLast then			local tabLast = self.tabAchievementList[tabCondition.dwLast]			if (not tabLast) or (not tabLast.eState) then return end		end		local szEvent = tabCondition.szEvent		tabEventList[szEvent] = tabEventList[szEvent] or {}		tabEventList[szEvent][dwAchievementID] = true	end	for dwAchievementID,tabCondition in pairs(tabConditionList) do		fnInsert(dwAchievementID,tabCondition)	end	return tabEventListend--判断奖励条件function CAchievementSystem:IsValidReward(dwAchievementID)	if not dwAchievementID then		return false	end	local tabAchievement = self.tabAchievementList[dwAchievementID] or {}	local eState = tabAchievement.eState	if eState and eState == enAchievementState.eReward then		return false	end	local tabInfo = self.tabConditionList[dwAchievementID]	if not tabInfo then		return false	end	local dwProgress = tabAchievement.dwProgress or 0	if dwProgress < tabInfo.dwValue then		return false	end	return trueend--获取奖励function CAchievementSystem:DoGetReward(dwAchievementID)	local tabReward = AchievementConfig[dwAchievementID].tabReward	local objItemSystem = self:GetPlayer():GetSystem('CItemSystem')	--获得物品	local setAddList = {};	if tabReward.dwItem1 then		local tempTable1 = {			dwItemEnum	= tabReward.dwItem1;			dwItemNumber= tabReward.dwNumber1 or 1;			dwBindType	= tabReward.dwBind1;		};		table.insert(setAddList, tempTable1);	end	if tabReward.dwItem2 then		local tempTable2 = {			dwItemEnum	= tabReward.dwItem2;			dwItemNumber= tabReward.dwNumber2 or 1;			dwBindType	= tabReward.dwBind2;		};		table.insert(setAddList, tempTable2);	end	if #setAddList > 0 then		objItemSystem:AddEnumItemListToPacket(setAddList, _G.ItemSysOperType.AchiReward);	end;	--获得银两	if tabReward.dwMoney and tabReward.dwMoney ~= 0 then		objItemSystem:AddPacketMoney(tabReward.dwMoney, _G.ItemSysOperType.AchiReward);	end	--获得礼金	if tabReward.dwGold and tabReward.dwGold ~= 0 then		objItemSystem:AddBindGold(tabReward.dwGold, _G.ItemSysOperType.AchiReward);	end	--获得属性	local tabParse = {		dwAttack = 'dwAttack',		dwDefence = 'dwDefense',		dwAgility = 'dwFlee',		dwCritical = 'dwCrit',		dwHPLimited = 'dwHPMax',		dwMPLimited = 'dwMPMax',		dwMoveSpeed = 'dwMoveSpeed',		dwAttackSpeed = 'dwAttackSpeed',	}	local tabArrInfo = SSingleAttrChange:new()	for k,v in pairs(tabParse) do		tabArrInfo[v] = tabReward[k] or 0	end	self:GetPlayer():GetSystem('CSkillSystem'):NotifyAchievement(dwAchievementID,tabArrInfo)	--已领取	self.tabAchievementList[dwAchievementID].eState = enAchievementState.eRewardend--刷新成就提示function CAchievementSystem:RefreshTip()	local b = false	local e = enAchievementState.eComplete	for k,v in pairs(self.tabAchievementList) do		if v.eState == e then b = true break end	end	self:GetPlayer().OnGetAchievementTipInfoMsg{ Flag = b }end--解析成就总点数function CAchievementSystem:ParseGeneralPoint()	local dwPoint = 0	for dwAchiID,tabInfo in pairs(self.tabAchievementList) do		if tabInfo.eState == enAchievementState.eReward then			local dwAddPoint = AchievementConfig[dwAchiID].tabReward.dwPoint			dwPoint = dwPoint + ( dwAddPoint or 0 )		end	end	return dwPointend--解析广播信息function CAchievementSystem:ParseBroadCast(szText,tabInfo)	local tabFlag = {		A = 'szRoleName',		B = 'szAchievementName',	}	while(string.find(szText,'@')) do		local dwIndex = string.find(szText,'@')		local szFlag = string.sub(szText,dwIndex+1,dwIndex+1)		local szReplace = tabInfo[tabFlag[szFlag]] or ''		szText = string.gsub(szText,'@'..szFlag,szReplace)	end	return szTextend------------------------------------------------------------------------------------计算增加的人物属性function CAchievementSystem:CountAttribute()	local objSelf = self:GetPlayer();	if not objSelf then		return;	end		local objSklSystem = objSelf:GetSystem("CSkillSystem");	if not objSklSystem then		return;	end		for dwAchievementID,tabInfo in pairs(self.tabAchievementList) do		if tabInfo.eState == enAchievementState.eReward then			local tabReward = AchievementConfig[dwAchievementID].tabReward						local tabParse = {				dwAttack = 'dwAttack',				dwDefence = 'dwDefense',				dwAgility = 'dwFlee',				dwCritical = 'dwCrit',				dwHPLimited = 'dwHPMax',				dwMPLimited = 'dwMPMax',				dwMoveSpeed = 'dwMoveSpeed',				dwAttackSpeed = 'dwAttackSpeed',			}			local tabArrInfo = SSingleAttrChange:new();			for k,v in pairs(tabParse) do				tabArrInfo[v] = tabReward[k] or 0;			end			objSklSystem:NotifyAchievement(dwAchievementID,tabArrInfo);		end	endend;--直接获得成就function CAchievementSystem:AddAchievement(dwAchievementID)	local tabCondition = self.tabConditionList[dwAchievementID]	if (not tabCondition) then		print('Err CAchievementSystem:AddAchievement',dwAchievementID)		return	end		self:UpdateProgress(dwAchievementID,tabCondition.dwValue,true);end;--------------------------------------------------------------------------[[拷贝自客户端为了减少成就对比消息大小--]]function CAchievementSystem:ParseHeadInfo(tabInfo,tabRole)	local tabData = {}	for k,v in pairs(tabRole) do		tabData[k] = v	end	local tabGeneral = self:ParseGeneralInfo(tabInfo)	tabData.dwCurValue = tabGeneral.dwCurValue	tabData.dwMaxValue = tabGeneral.dwMaxValue	tabData.dwIncoID = tabRole.dwIncoID	--tabData.szIncoName = ResRoleModelConfig.Icons[tabRole.dwIncoID].szFile	return tabDataendfunction CAchievementSystem:ParseTotalInfo(tabAchiData)	local tabData = {}	for i = 1,#AchievementListConfig do		local tabListInfo = self:ParseListInfo(tabAchiData,i)		tabData[i] = tabListInfo	end	return tabDataendfunction CAchievementSystem:ParseGeneralInfo(tabAchiData)	local tabData = {}	tabData.dwCurValue = 0	tabData.dwMaxValue = 0	tabData.dwCurPoint = 0	tabData.dwMaxPoint = 0	for i = 1,#AchievementListConfig do		local tabListInfo = self:ParseListInfo(tabAchiData,i)		tabData.dwCurValue = tabData.dwCurValue + tabListInfo.dwCurValue		tabData.dwMaxValue = tabData.dwMaxValue + tabListInfo.dwMaxValue		tabData.dwCurPoint = tabData.dwCurPoint + tabListInfo.dwCurPoint		tabData.dwMaxPoint = tabData.dwMaxPoint + tabListInfo.dwMaxPoint	end	return tabDataendfunction CAchievementSystem:ParseListInfo(tabAchiData,dwIndex)	local tabData = {}	local tabListInfo = nil	local tabAchievementList = nil	if dwIndex ~= 0 then		tabListInfo = AchievementListConfig[dwIndex]		tabAchievementList = tabListInfo.tabAchievementList	else		tabListInfo = {}		tabAchievementList = AchievementSpecailList	end	tabData.szName = tabListInfo.szName	tabData.dwCurValue = 0	tabData.dwMaxValue = 0	tabData.dwCurPoint = 0	tabData.dwMaxPoint = 0	tabData.bReward = false	for _,dwAchiID in ipairs(tabAchievementList) do		local dwPoint = AchievementConfig[dwAchiID].tabReward.dwPoint or 0		tabData.dwMaxValue = tabData.dwMaxValue + 1		tabData.dwMaxPoint = tabData.dwMaxPoint + dwPoint		local tabAchievement = tabAchiData[dwAchiID] or {}		local eState = tabAchievement.eState		if eState then			tabData.dwCurValue = tabData.dwCurValue + 1			if eState == enAchievementState.eReward then				tabData.dwCurPoint = tabData.dwCurPoint + dwPoint			end			if eState == enAchievementState.eComplete then				tabData.bReward = true			end		end	end	return tabDataend--是否已有成就 (完成 领取奖励状态都算已有该成就)function CAchievementSystem:IsHaveAchievement(dwAchievementID)	local tabAchievement = self.tabAchievementList[dwAchievementID];	if tabAchievement and  tabAchievement.eState then		if tabAchievement.eState >= _G.enAchievementState.eComplete then			return true;		end		return false;	end		return false;end