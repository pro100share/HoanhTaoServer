--[[	--功能：聚灵珠等级版系统类	--作者：魏云	--时间：2013-12-13--]]_G.CCollectJewelLevelSystem = {}function CCollectJewelLevelSystem:new()	local obj = CSystem:new("CCollectJewelLevelSystem");	obj.objDBQuery = nil;--数据库查询对象	obj.RoleID = 0;	obj.CollectJewelState = {}; ----聚灵状态 0 是未开启 1 是已开启未领取 其他数值为领取等级 	obj.CollectJewelLevel = {};  ----已开启灵珠 领取奖励列表	for i,v in pairs(CCollectJewelLevelSystem) do		if type(v) == "function" then			obj[i] = v;		end;	end;	return obj;endfunction CCollectJewelLevelSystem:Create()	local objPlayer = self:GetPlayer();	if not objPlayer then		return false;	end;	local objDB = objPlayer:GetDBQuery();	if(not objDB ) then		_info("objDB is null by CCollectJewelLevelSystem:Create")		return false;	end	-- 创建数据库对象	self.objDBQuery = CCollectJewelLevelSystemDB:new(objDB,self);	self:InitData();	---从数据库中读取数据	local Data = objPlayer:GetLineData("CCollectJewelLevelSystem") or {};	if(#Data <= 0) then		return;	end	if(#Data[1] > 0) then		self.RoleID = Data[1][1].dwRoleID;		self.CollectJewelState = self:LoadStr(Data[1][1].dwCollectJewelState);		self.CollectJewelLevel = self:LoadStrs(Data[1][1].dwCollectJewelLevel);	end	return trueend--- 用于道具重置接口function CCollectJewelLevelSystem:ResetStateInfo(nIndex)	self.CollectJewelState[nIndex] = 1;	self.CollectJewelLevel[nIndex] = {};	---存入数据库	self:SaveDB();	----返回给客户端消息	self:GetPlayer().CollectJewelLevelSynMsg{CollectJewelState = self.CollectJewelState,CollectJewelLevel = self.CollectJewelLevel};---注灵状态endfunction CCollectJewelLevelSystem:OnChangeLineBegin(dwNewLineID)	local objPlayer = self:GetPlayer();	if not objPlayer then		return;	end;	local Data = {}	Data[1] = {};	Data[1].dwRoleID = self.RoleID;	Data[1].dwCollectJewelState = self:UpdateStr(self.CollectJewelState);	Data[1].dwCollectJewelLevel = self:UpdateStrs(self.CollectJewelLevel)	--将数据提交到换线中心	objPlayer:SetLineData("CCollectJewelLevelSystem",Data);endfunction CCollectJewelLevelSystem:OnEnterScene()	self:SynchronizeToClient();endfunction CCollectJewelLevelSystem:SynchronizeToClient()	local objPlayer = self:GetPlayer();	if(not objPlayer) then		return;	end	---同步客户端	objPlayer.CollectJewelLevelSynMsg{CollectJewelState = self.CollectJewelState,CollectJewelLevel = self.CollectJewelLevel};---注灵状态end----初始化灵珠信息function CCollectJewelLevelSystem:InitData()	for i = 1,#_G.CollectJewelLevelConfig.pearl do		self.CollectJewelState[i] = 0;		self.CollectJewelLevel[i] = {};	endend---玩家开启聚灵function CCollectJewelLevelSystem:OpenCollectJewel(CollJewType)	local objPlayer = self:GetPlayer();	if(not objPlayer) then		return;	end	if(self.CollectJewelState[CollJewType] ~= 0) then ----不是未开启状态		return;	end	local sysScript = objPlayer:GetSystem("CScriptSystem")	if(not sysScript) then		_info("error : CCollectJewelLevelSystem:OpenCollectJewel sysScript is error",sysScript)		return ;	end	local objItemSystem = objPlayer:GetSystem("CItemSystem");	if( not objItemSystem ) then		return ;	end	local CostGoldNum = CollectJewelLevelConfig.GetBeginGainsCost(CollJewType);	if(CostGoldNum <= 0) then		return;	end	if(not objItemSystem:IsGoldEnough(CostGoldNum)) then		return;	end	objItemSystem:CostGold(CostGoldNum, _G.ItemSysOperType.CollectJewelLevel);	---设置状态	self.CollectJewelState[CollJewType] = 1;	---存入数据库	self:SaveDB();	----返回给客户端消息	objPlayer.CollectJewelLevelSynMsg{CollectJewelState = self.CollectJewelState,CollectJewelLevel = self.CollectJewelLevel};---注灵状态end---玩家获取奖励function CCollectJewelLevelSystem:GetCollectJewelAward(CollJewType,Level)	--print("=========GetCollectJewelAward===================",CollJewType,Level)	local objPlayer = self:GetPlayer();	if(not objPlayer) then		--print("1")		return;	end	if(self.CollectJewelState[CollJewType] == 0) then ----不是可领取状态		--print("2")		return;	end	if(objPlayer:GetLevel() < Level) then  -----玩家等级未达到		--print("3")		return;	end	if(self:CheckCollectJewelLevel(CollJewType,Level)) then ----玩家已领取过		--print("4")		return;	end	---设置状态	self.CollectJewelState[CollJewType] = 2;	local index = #self.CollectJewelLevel[CollJewType] + 1;	self.CollectJewelLevel[CollJewType][index] = Level;	---获取收获奖励	local awardInfo = CollectJewelLevelConfig.GetAwardItemInfo(CollJewType,Level,objPlayer:GetLevel());	self:GivePlayerAwardInfo(awardInfo);	---存入数据库	self:SaveDB();	----返回给客户端消息	objPlayer.CollectJewelLevelSynMsg{CollectJewelState = self.CollectJewelState,CollectJewelLevel = self.CollectJewelLevel};---注灵状态end----检查注灵等级是否领取过function CCollectJewelLevelSystem:CheckCollectJewelLevel(CollJewType,Level)	for k,v in pairs(self.CollectJewelLevel[CollJewType]) do		if(v == Level) then			return true;		end	end	return false;endfunction CCollectJewelLevelSystem:GivePlayerAwardInfo(awardInfo)	-- Exp = 1, -->经验	-- Money = 2, -->银两	-- Pneuma = 3, -->真气	-- Item = 4, -->物品	-- Cash = 5, -->礼金	--FenyYunValue = 6,---	local objPlayer = self:GetPlayer();	if(not objPlayer) then		return;	end	local objItemSystem = objPlayer:GetSystem("CItemSystem");	if( not objItemSystem ) then		return ;	end	local tempAwardInfo = {};	local setAddItemList = {};	local b_sendMail = false;	for k,v in pairs(awardInfo) do		if(v[1] == _G.CollectLevelAwardType.Exp) then			objPlayer:AddExp(v[2]);		elseif(v[1] == _G.CollectLevelAwardType.Money ) then			if objItemSystem:IsCanAddPacketMoney(v[2]) then				objItemSystem:AddPacketMoney(v[2], _G.ItemSysOperType.CollectJewelLevel);			end		elseif(v[1] == _G.CollectLevelAwardType.Pneuma) then			local FiveElemSys = objPlayer:GetSystem('CFiveElemSystem');			if(not FiveElemSys) then				return;			end			-----增加真气值			FiveElemSys:ChangeAttr( 'dwMetalValue', v[2] )			FiveElemSys:ChangeAttr( 'dwWoodValue', v[2] )			FiveElemSys:ChangeAttr( 'dwWaterValue', v[2] )			FiveElemSys:ChangeAttr( 'dwFireValue', v[2] )			FiveElemSys:ChangeAttr( 'dwEarthValue', v[2] )			FiveElemSys:UpdateInfoToClient(objPlayer,2)		elseif(v[1] == _G.CollectLevelAwardType.Cash) then			objItemSystem:AddBindGold(v[2], _G.ItemSysOperType.CollectJewelLevel);		elseif(v[1] == _G.CollectLevelAwardType.FenyYunValue) then			local sys = objPlayer:GetSystem("CErrantHonorSystem");			if(sys) then				sys:AddErrantHonorValue(v[2]);			end		elseif(v[1] == _G.CollectLevelAwardType.Item) then            table.insert(setAddItemList, {                dwItemEnum = v[2];                dwItemNumber =v[3];                dwBindType = v[4];                dwLifeTime = -1;            });			if( not objItemSystem:IsEnumItemListCanAddToPacket(setAddItemList) ) then				local index = #tempAwardInfo + 1;				tempAwardInfo[index] = {}; 				tempAwardInfo[index] = {AwardItemID = v[2],AwardItemNum = v[3],AwardItemBindType = v[4]}				b_sendMail = true;			else				local tabAddPackList = {};				table.insert(tabAddPackList,{dwItemEnum=v[2],dwItemNumber=v[3],dwBindType = v[4]})				objItemSystem:AddEnumItemListToPacket(tabAddPackList, _G.ItemSysOperType.CollectJewelLevel);			end		end	end	if(b_sendMail) then		---发邮箱		---邮件发送给玩家奖励物品		local mailSys = objPlayer:GetSystem("CMailSystem");		if(not mailSys) then			return;		end		local mailMsg = CollectJewelLevelConfig.SetMaiInfo(tempAwardInfo)		if(not mailMsg) then			return;		end		mailSys:SendSetMail( mailMsg, objPlayer:GetRoleID(), objPlayer:GetName() ) ---发送一个设置的邮件	endend----保存数据库function CCollectJewelLevelSystem:SaveDB()	if(self.RoleID <= 0) then		self.objDBQuery:InsertCollectJewelLevelInfo();		self.RoleID = self:GetPlayer():GetRoleID();	else		self.objDBQuery:UpdateCollectJewelLevelInfo();	endend---加载字符串 转换为 tablefunction CCollectJewelLevelSystem:LoadStr(str)	if(str == nil) then		return false;	end	local b = {};	local lastIndex = 0;	local index = 1;	while true do		local nextIndex = lastIndex + 1;		lastIndex = string.find(str, ";", nextIndex)		if not lastIndex then break end;		local str1 = string.sub(str, nextIndex, lastIndex - 1);		local value = tonumber(str1);		b[index] = value;		index = index + 1;	end;	return b;end----加载字符串s 转换成table function CCollectJewelLevelSystem:LoadStrs(str)	if(str == nil) then		return false;	end	local b = {};	local lastIndex = 0;	local index = 1;	while true do		local nextIndex = lastIndex + 1;		lastIndex = string.find(str, ",", nextIndex)		if not lastIndex then break end;		local str1 = string.sub(str, nextIndex, lastIndex - 1);		local tabinfo = self:LoadStr(str1);		b[index] = tabinfo;		index = index + 1;	end;	return b;end---更新字符串function CCollectJewelLevelSystem:UpdateStr(str)	local strResult = ""	for i = 1,#str do		 strResult =  strResult..str[i]..";"	end	return strResultend;---更新字符串sfunction CCollectJewelLevelSystem:UpdateStrs(str)	local strResult = ""	for i = 1,#str do		 strResult =  strResult..self:UpdateStr(str[i])..","	end	return strResultend