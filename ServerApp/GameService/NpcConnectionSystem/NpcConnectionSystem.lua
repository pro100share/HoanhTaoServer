--[[功能：江湖人脉系统类（服务器）版本：v1.0作者：粟宇征时间：2013-01-16]]_G.CNpcConnectionSystem = {};function CNpcConnectionSystem:new()	local obj = CSystem:new("CNpcConnectionSystem");	obj.ItemSystem = nil;	for index, value in pairs(CNpcConnectionSystem) do		if type(value) == "function" then			obj[index] = value;		end;	end;	return obj;end;----------------------------------------------------------------------------------------------------function CNpcConnectionSystem:Create()	--获得player	self.m_myPlayer = self:GetPlayer();	if not self.m_myPlayer then		_err("CNpcConnectionSystem Create Cannot get player");		return false;	end;	--初始化DB	self.m_objDB = self.m_myPlayer:GetDBQuery();	if not self.m_objDB then		_err("CNpcConnectionSystem Create Cannot get DBQuery");		return false;	end;		--初始化数值	self.m_tabData = {}	self.m_tabData = self.m_myPlayer:GetLineData("CNpcConnectionSystem")[1]		local tData = {}	local tNums = {}	if not self.m_tabData then		for i = 1,#NpcConnectionConfig do			tNums[i] = -1;		end		tData.dwRoleID = self.m_myPlayer:GetRoleID();		tData.sztNpcCurTearchNum = _G.fPackSZNumData(tNums) or '';		self:AddDBData(tData);	else		local bChange = false;		tNums = _G.fParseSZNumData(self.m_tabData.sztNpcCurTearchNum)		for i = 1,#NpcConnectionConfig do			if not tNums[i] then				tNums[i] = -1;				bChange = true;			end		end		tData.dwRoleID = self.m_myPlayer:GetRoleID();		tData.sztNpcCurTearchNum = _G.fPackSZNumData(tNums) or '';		if bChange then self:ChangeDBData(tData.sztNpcCurTearchNum); end	end	self.m_tabData = tData;		self.m_tTearchNums = {}	--每个Npc当前指教数	self.m_tTearchNums = _G.fParseSZNumData(self.m_tabData.sztNpcCurTearchNum) or {}		--已结交的Npc	self.m_tCurNpcFriendNum = {}	for i,v in ipairs(self.m_tTearchNums) do		if v ~= -1 then			table.insert(self.m_tCurNpcFriendNum,i)		end	end				self.m_OnDayTimeSystem = self.m_myPlayer:GetSystem('COnDayTimeSystem')		self:UpdataAttr();	return true;end;function CNpcConnectionSystem:Update(dwInterval)	return true;end;function CNpcConnectionSystem:Destroy()end;function CNpcConnectionSystem:OnChangeLineBegin(dwNewLineID)	self.m_myPlayer:SetLineData("CNpcConnectionSystem",self.m_tabData)end;---------------------------public 接口--结交function CNpcConnectionSystem:OnForgather(dwNpcNum)	if not self.m_tabData then return end;	if not self.m_tTearchNums then return end;		if not self:CheckForgather(dwNpcNum) then return end	--消耗	local objSystem = self.m_myPlayer:GetSystem('CItemSystem');	if NpcConnectionConfig[dwNpcNum].tForgatherQualification.dwNeedMoney then		objSystem:CostPacketMoney(NpcConnectionConfig[dwNpcNum].tForgatherQualification.dwNeedMoney, _G.ItemSysOperType.NpcConn)	end	if NpcConnectionConfig[dwNpcNum].tForgatherQualification.tItem then			for _,Item in pairs(NpcConnectionConfig[dwNpcNum].tForgatherQualification.tItem) do			if not objSystem:DelEnumItemInPacket(Item.dwItemID,Item.dwNumber,true, _G.ItemSysOperType.NpcConn) then return end		end	end	--更新数据	table.insert(self.m_tCurNpcFriendNum,dwNpcNum)	self.m_tTearchNums[dwNpcNum] = 0;	self.m_tabData.sztNpcCurTearchNum = _G.fPackSZNumData(self.m_tTearchNums);	--print('OnForgather self.m_tabData.sztNpcCurTearchNum : ',self.m_tabData.sztNpcCurTearchNum)	self:ChangeDBData(self.m_tabData.sztNpcCurTearchNum)	--通知客户端	local tResult = {};	tResult.dwNpcNum = dwNpcNum;	tResult.Info = self.m_tTearchNums	tResult.tFriend = self.m_tCurNpcFriendNum	self.m_myPlayer.OnBackForgatherMsg{Result = tResult or {}};	--抛出事件	self.m_myPlayer:GetSystem("CPlayerEventCenterSystem"):DoEvent(		enumPlayerEventType.NpcConnectionForgather,		dwNpcNum	)	end;--指教function CNpcConnectionSystem:OnTeaching(dwNpcNum)	if not self.m_tabData then return end;	if not self.m_tTearchNums then return end;		if not self:CheckTeaching(dwNpcNum) then return end;		local dwCurTeachs = self.m_tTearchNums[dwNpcNum]+1;	--消耗	local objSystem = self.m_myPlayer:GetSystem('CItemSystem');	if NpcConnectionConfig[dwNpcNum].tTeachingQualification.dwNeedMoney then		objSystem:CostPacketMoney(NpcConnectionConfig[dwNpcNum].tTeachingQualification.dwNeedMoney[dwCurTeachs], _G.ItemSysOperType.NpcConn)	end	if NpcConnectionConfig[dwNpcNum].tTeachingQualification.tItem then			for _,Item in pairs(NpcConnectionConfig[dwNpcNum].tTeachingQualification.tItem[dwCurTeachs]) do			if not objSystem:DelEnumItemInPacket(Item.dwItemID,Item.dwNumber,true, _G.ItemSysOperType.NpcConn) then return end		end	end	--更新数据	self.m_tTearchNums[dwNpcNum] = dwCurTeachs;	self.m_tabData.sztNpcCurTearchNum = _G.fPackSZNumData(self.m_tTearchNums);	--print('OnTeaching self.m_tabData.sztNpcCurTearchNum : ',self.m_tabData.sztNpcCurTearchNum)	self:ChangeDBData(self.m_tabData.sztNpcCurTearchNum);	local dwDayLimit = self.m_OnDayTimeSystem:GetDataOnSystemIDIndex(GSystemID.NpcConnection,dwNpcNum);	dwDayLimit = dwDayLimit - 1;	self.m_OnDayTimeSystem:SetDataOnSystemID(GSystemID.NpcConnection,dwNpcNum,dwDayLimit);	self:UpdataAttr();	--通知客户端	local tResult = {};	tResult.dwNpcNum = dwNpcNum;	tResult.Info = self.m_tTearchNums	tResult.dwDayLimit = dwDayLimit	self.m_myPlayer.OnBackTeachingMsg{Result = tResult or {}};	--抛出事件	self.m_myPlayer:GetSystem("CPlayerEventCenterSystem"):DoEvent(		enumPlayerEventType.NpcConnectionTeaching,		dwNpcNum,		self.m_tTearchNums[dwNpcNum]	)	end;function CNpcConnectionSystem:OnGetNpcConnectionInfo()	local tInfo = {}	tInfo.tData = self.m_tTearchNums;	tInfo.tFriend = self.m_tCurNpcFriendNum;	tInfo.tDatLimitTeach = self.m_OnDayTimeSystem:GetDataOnSystemID(GSystemID.NpcConnection);	self.m_myPlayer.OnBackInfoMsg{Info = tInfo};end---------------------------private--检测结交function CNpcConnectionSystem:CheckForgather(dwNpcNum)	--等级	if NpcConnectionConfig[dwNpcNum].tForgatherQualification.dwRoleLevel then		if self.m_myPlayer:GetLevel() < NpcConnectionConfig[dwNpcNum].tForgatherQualification.dwRoleLevel then return false end;	end	--威望	if NpcConnectionConfig[dwNpcNum].tForgatherQualification.dwWeiwangLevel then		if self.m_myPlayer:GetSystem('CMissionDailySystem'):GetWeiWangLevel() < NpcConnectionConfig[dwNpcNum].tForgatherQualification.dwWeiwangLevel then return false end;	end	--伙伴	if NpcConnectionConfig[dwNpcNum].tForgatherQualification.tFriendID then		if not self.m_tCurNpcFriendNum then return false end;		local tNeedNpcFriendID = NpcConnectionConfig[dwNpcNum].tForgatherQualification.tFriendID;		if _G.fIsTACompriseTB(self.m_tCurNpcFriendNum,{dwNpcNum}) then return false end;		if not _G.fIsTACompriseTB(self.m_tCurNpcFriendNum,tNeedNpcFriendID) then return false end;	end	--银两	local objSystem = self.m_myPlayer:GetSystem('CItemSystem');	if NpcConnectionConfig[dwNpcNum].tForgatherQualification.dwNeedMoney then		if not objSystem:IsPacketMoneyEnough(NpcConnectionConfig[dwNpcNum].tForgatherQualification.dwNeedMoney) then return false end;	end	--道具	if NpcConnectionConfig[dwNpcNum].tForgatherQualification.tItem then			local tNeedItem =  NpcConnectionConfig[dwNpcNum].tForgatherQualification.tItem;		for _,Item in pairs(tNeedItem) do			if objSystem:GetEnumItemNumInPacket(Item.dwItemID) < Item.dwNumber then return false end;		end	end	return true;end;--检测指教function CNpcConnectionSystem:CheckTeaching(dwNpcNum)	--次数限制	if not self.m_tTearchNums[dwNpcNum] then return false end;	local dwTeachs = self.m_tTearchNums[dwNpcNum];	if NpcConnectionConfig[dwNpcNum].tTeachingQualification.dwLimitNum then		if dwTeachs >= NpcConnectionConfig[dwNpcNum].tTeachingQualification.dwLimitNum then return false end;	end	if self.m_OnDayTimeSystem:GetDataOnSystemIDIndex(GSystemID.NpcConnection,dwNpcNum) <= 0 then return false end;	--银两	local objSystem = self.m_myPlayer:GetSystem('CItemSystem');	if NpcConnectionConfig[dwNpcNum].tTeachingQualification.dwNeedMoney then		if not objSystem:IsPacketMoneyEnough(NpcConnectionConfig[dwNpcNum].tTeachingQualification.dwNeedMoney[dwTeachs+1]) then return false end;	end	--道具	if NpcConnectionConfig[dwNpcNum].tTeachingQualification.tItem then		for _,Item in pairs(NpcConnectionConfig[dwNpcNum].tTeachingQualification.tItem[dwTeachs+1]) do			if objSystem:GetEnumItemCounts(Item.dwItemID) < Item.dwNumber then return false end;		end	end	return true;end;--更新属性function CNpcConnectionSystem:UpdataAttr()	if not self:HasAuthority('NpcConnectionSystem') then return end		local tAttr = SSingleAttrChange:new();		for i,v in ipairs(self.m_tTearchNums) do		if v ~= -1 then			local tAddProperty ={}			if v ~= 0 then tAddProperty = NpcConnectionConfig.fPropertyAppend(i,v) end			if NpcConnectionConfig[i].tFirstProperty.dwHPMax then				tAttr.dwHPMax = (tAttr.dwHPMax or 0) + NpcConnectionConfig[i].tFirstProperty.dwHPMax + (tAddProperty.dwHPMax or 0);--生命max			end			if NpcConnectionConfig[i].tFirstProperty.dwMPMax then				tAttr.dwMPMax = (tAttr.dwMPMax or 0) + NpcConnectionConfig[i].tFirstProperty.dwMPMax + (tAddProperty.dwMPMax or 0);--内力max			end			if NpcConnectionConfig[i].tFirstProperty.dwAttack then				tAttr.dwAttack = (tAttr.dwAttack or 0) + NpcConnectionConfig[i].tFirstProperty.dwAttack + (tAddProperty.dwAttack or 0);--攻击			end			if NpcConnectionConfig[i].tFirstProperty.dwDefense then				tAttr.dwDefense = (tAttr.dwDefense or 0) + NpcConnectionConfig[i].tFirstProperty.dwDefense + (tAddProperty.dwDefense or 0);--防御			end			if NpcConnectionConfig[i].tFirstProperty.dwCrit then				tAttr.dwCrit = (tAttr.dwCrit or 0) + NpcConnectionConfig[i].tFirstProperty.dwCrit + (tAddProperty.dwCrit or 0);--暴击			end			if NpcConnectionConfig[i].tFirstProperty.dwFlee then				tAttr.dwFlee = (tAttr.dwFlee or 0) + NpcConnectionConfig[i].tFirstProperty.dwFlee + (tAddProperty.dwFlee or 0);--身法			end			if NpcConnectionConfig[i].tFirstProperty.dwAttackSpeed then				tAttr.dwAttackSpeed = (tAttr.dwAttackSpeed or 0) + NpcConnectionConfig[i].tFirstProperty.dwAttackSpeed + (tAddProperty.dwAttackSpeed or 0);--攻击速度			end			if NpcConnectionConfig[i].tFirstProperty.dwMoveSpeed then				tAttr.dwMoveSpeed = (tAttr.dwMoveSpeed or 0) + NpcConnectionConfig[i].tFirstProperty.dwMoveSpeed + (tAddProperty.dwMoveSpeed or 0);--移动速度			end		end	end	local objSystem = self:GetPlayer():GetSystem('CSkillSystem')	objSystem:NotifyRenMai(tAttr)end--打开权限事件处理function CNpcConnectionSystem:OnEventCenter(szEventName,Param1)	if szEventName == enumPlayerEventType.EventGetAuthority and Param1 == 'NpcConnectionSystem' then		self:UpdataAttr();	endend--------------------------------数据库处理--设置数据库function CNpcConnectionSystem:ChangeDBData(sztNpcCurTearchNum)	--print('========CNpcConnectionSystem:SetSZData======',sztNpcCurTearchNum)	local dwRoleID = self.m_myPlayer:GetRoleID();	if not dwRoleID then 		_info("DB invalidity by CNpcConnectionSystem:ChangeDBData() dwRoleID");		return false;	end;	local SqlCmd = self.m_objDB:CreateUpdateCmd('T_Role_NpcConnection')	SqlCmd.Wheres.dwRoleID = dwRoleID;	SqlCmd.Fields.sztNpcCurTearchNum = sztNpcCurTearchNum or ''	SqlCmd:execute()end--添加一个条数据function CNpcConnectionSystem:AddDBData(tDBData)	--print('========CNpcConnectionSystem:AddDBData======',tDBData)	local dwRoleID = self.m_myPlayer:GetRoleID();	if not dwRoleID then 		_info("DB invalidity by CNpcConnectionSystem:AddDBData() dwRoleID");		return false;	end;		local SqlCmd = self.m_objDB:CreateInsertCmd('T_Role_NpcConnection')	SqlCmd.Fields.dwRoleID = tDBData.dwRoleID	SqlCmd.Fields.sztNpcCurTearchNum = tDBData.sztNpcCurTearchNum or ''	SqlCmd:execute()end