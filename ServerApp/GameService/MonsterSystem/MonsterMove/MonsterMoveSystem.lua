--[[	怪物系统 怪物移动	周长沙	2012-4-16--]]_G.CMonsterMoveSystem = {}-----------------------------------local function group_msg(setNet,szMsgName,tParam)	_groupcallout(setNet, szMsgName, tParam);end------------------------------------function CMonsterMoveSystem:new(objMon)	local obj = {}	for k,v in pairs(CMonsterMoveSystem) do		if type(v)=="function" then			obj[k]=v		end	end	obj:Create(objMon)	return objend-----------------------------------function CMonsterMoveSystem:Create(objMon)	self.objMon = objMon											--怪物对象	self.bIsMoving = false											--是否在移动	self.vPos = {x=objMon.Data.fBornX;y=objMon.Data.fBornY}			--怪物坐标	self.fDir = 0													--方向	self.vDir = Vector2.new()										--方向向量	self.vTarget = {x=0;y=0}										--目标地点	self.fMoveDis = 0												--离目的地点的距离	self.fDefaultSpeed = objMon.DataInfo.dwDefaultSpeed				--默认速度	self.fSpeed = self.fDefaultSpeed								--当前速度	self.dwLastWalkStartTime = 0									--上次移动开始时间	self.dwLastWalkUpdateTime = 0									--上次移动更新时间	self.dwLastWalkStopTime = 0										--上次移动停止时间			------add by dll 2012 5 24		-- self.dwCheckerX		= 0												--所在格子X	-- self.dwCheckerY		= 0												--所在格子Y	-- self.setCanSeeEntity = {}											--可视格子表	------add endendfunction CMonsterMoveSystem:Update()	if self.bIsMoving then		--self:UpdateMove()	endendfunction CMonsterMoveSystem:Destroy()end-------------------------------------开始移动function CMonsterMoveSystem:StartMove(fPosX,fPosY)	--lw	--怪物处在移动动作中，不能move	if self.tbMoveActionInfo then		return	end	--定身状态中	if self.objMon:GetSystem("CMonsterSkillSystem"):GetInfo().dwMoveForbidFlag ~= 0 then		self:DoneWithMoveEnd(nil,true);		return;	end	--不能移动的怪物	if self.objMon.DataInfo.dwNoTurn ==1 then		self:DoneWithMoveEnd(nil,true);		return;	end		self.bIsMoving = true	self.vTarget.x = fPosX	self.vTarget.y = fPosY	self.fSpeed = self.objMon:GetSystem("CMonsterSkillSystem"):GetInfo().dwMoveSpeed	self.vDir.x = self.vTarget.x-self.vPos.x;	self.vDir.y = self.vTarget.y-self.vPos.y;	self.vDir:normalize();	local fcosValue = Vector3.dot(Vector3.new(self.vDir.x,self.vDir.y,0),Vector3.new(0,-1,0));	local fAngle = math.acos(fcosValue);	if self.vDir.x < 0 then		fAngle = math.pi*2 - fAngle ;	end	if string.find(tostring(fAngle),"nan") then		fAngle = 0;	end; 	self.fDir = fAngle;	self.dwLastWalkStartTime = GetCurTime()	self.dwLastWalkUpdateTime = self.dwLastWalkStartTime	self.fMoveDis = math.sqrt((self.vTarget.y-self.vPos.y)^2 + (self.vTarget.x-self.vPos.x)^2)	--同步到客户端	local objMon = self:GetMon()	local Map = objMon:GetMap()	local dwObjId = objMon:GetRoleID()	if Map then		-- local setNet = {}		local szMsgName = "MonsterMoveMsg"		local tParam = {DwMonsterObjId=dwObjId,PosX=math.floor(self.vTarget.x*100),PosY=math.floor(self.vTarget.y*100),FSpeed=self.fSpeed,FDir=math.floor(self.fDir*100)}					_mapcallout(szMsgName,tParam, objMon.dwLogicID, true)	end		_MoveToRequest(self.objMon.dwLogicID,self.vPos.x,self.vPos.y,fPosX,fPosY,self.fSpeed*100);end--移动中-- function CMonsterMoveSystem:UpdateMove()	-- local dwNowTime = GetCurTime()	-- local dwDelayTime = dwNowTime - self.dwLastWalkUpdateTime	-- self.dwLastWalkUpdateTime = dwNowTime	-- --获取间隔时间	-- dwDelayTime = dwDelayTime/1000	-- --移动目的地	-- if not self.vTarget then return end;	-- local dwLastDis =  math.sqrt((self.vPos.y-self.vTarget.y)^2 + (self.vPos.x-self.vTarget.x)^2)	-- --获取当前地点	-- self:SetPos(self.vPos.x + self.vDir.x * dwDelayTime * self.fSpeed,self.vPos.y + self.vDir.y * dwDelayTime * self.fSpeed)	-- local dwNowDis = math.sqrt((self.vPos.y-self.vTarget.y)^2 + (self.vPos.x-self.vTarget.x)^2)	-- if dwNowDis >= dwLastDis then		-- self:SetPos(self.vTarget.x,self.vTarget.y)		-- self:StopMove(nil,nil,true)	-- else		-- self.fMoveDis = dwNowDis	-- end-- end--停止移动function CMonsterMoveSystem:StopMove(fPosX,fPosY,bNoSend)	-- self.dwLastWalkUpdateTime = 0	-- self.dwLastWalkStopTime = _now()	--local tbPos = self:GetVPos();	--_info("===StopMove===",self.objMon:GetRoleID(),tbPos.x,tbPos.y,fPosX,fPosY)	self:SetPos(fPosX,fPosY)	if not self.bIsMoving then		return;	end	self.bIsMoving = false	local tbPos = self:GetVPos();		_StopMove(self.objMon.dwLogicID,tbPos.x,tbPos.y);	endfunction CMonsterMoveSystem:DoneWithMoveEnd(tbPos,bNoSend)	self.bIsMoving = false	self.dwLastWalkUpdateTime = 0	self.dwLastWalkStopTime = GetCurTime()	if tbPos then		self:SetPos(tbPos.x,tbPos.y)	else		self:SetPos();	end	local objMon = self:GetMon()	local f = function()		objMon:GetSystem("CMonsterAISystem"):RecvEvent("OnMoveEnd")	end	CDelayerManager:Delay(eDelay._100ms,f)	if bNoSend then return end;	--do return end;	--同步到客户端		local Map = objMon:GetMap()	local dwObjId = objMon:GetRoleID()	if Map then		-- local setNet = {}		local szMsgName = "MonsterStopMoveMsg"		local tParam = {DwMonsterObjId=dwObjId,PosX=math.floor(self.vPos.x*100),PosY=math.floor(self.vPos.y*100),FDir=math.floor(self.fDir*100)}				_mapcallout(szMsgName,tParam, objMon.dwLogicID, true)	endend;--设置位置function CMonsterMoveSystem:SetPos(fPosX,fPosY)	local tbPos = self:GetVPos();	self.vPos.x = fPosX or tbPos.x	self.vPos.y = fPosY or tbPos.y		--_info("==SetPos==",self:GetMon():GetRoleID(),tbPos.x,tbPos.y,fPosX,fPosY)endfunction CMonsterMoveSystem:DoneWithCheckerChange(tbOldID,tbNewID)	local objMonster = self.objMon;	if not objMonster then		return;	end;		local map = self.objMon.Map;	if not map then		_info("error:map is nill by CMonsterMoveSystem:DoneWithCheckerChange");		return false;	end;		for n,dwRoleId in pairs(tbOldID)do		local objOld = map:GetPlayerByRoleID(dwRoleId);		if objOld then			local sysMon = objOld:GetSystem("CMonsterSystem")			if sysMon then				sysMon:SendMonsterDelMonster(objMonster:GetRoleID())			end;		end	end		for n,dwRoleId in pairs(tbNewID)do		local objNew = map:GetPlayerByRoleID(dwRoleId);		if objNew then			local sysMon = objNew:GetSystem("CMonsterSystem")			if sysMon then				sysMon:SendMonsterAddMonster(objMonster)			end;		end	endend;-------------------------------------接口--获得怪物对象function CMonsterMoveSystem:GetMon()	return self.objMonend--获得怪物当前坐标function CMonsterMoveSystem:GetVPos()	local tbPos = {};		tbPos.x = self.vPos.x;	tbPos.y = self.vPos.y;		if self.bIsMoving then		local tmDis = GetCurTime() - self.dwLastWalkStartTime;		local speed = self.fSpeed/1000;		tbPos.x = self.vPos.x + self.vDir.x * speed * tmDis;		tbPos.y = self.vPos.y + self.vDir.y * speed * tmDis;	else		if self.tbMoveActionInfo and self.tbMoveActionInfo.dwBegin then			local dwTimeDis = GetCurTime() - self.tbMoveActionInfo.dwBegin;						if dwTimeDis < self.tbMoveActionInfo.dwTime then				tbPos.x = self.vPos.x + self.tbMoveActionInfo.vecDis.x*dwTimeDis/self.tbMoveActionInfo.dwTime;				tbPos.y = self.vPos.y + self.tbMoveActionInfo.vecDis.y*dwTimeDis/self.tbMoveActionInfo.dwTime;			end		end	end		return tbPos;end--获得怪物当前是否在移动function CMonsterMoveSystem:IsMoving()	return self.bIsMovingend--获得怪物上次移动停止时间function CMonsterMoveSystem:GetLastStopTime()	return self.dwLastWalkStopTimeendfunction CMonsterMoveSystem:SetNewSpeed()	--_SetNodeSpeed(self.objMon.dwLogicID,self.objMon:GetSystem("CMonsterSkillSystem"):GetInfo().dwMoveSpeed*100);		-- local tbPos = self:GetVPos()	-- _info("===SetNewSpeed 1===",self.objMon:GetRoleID(),tbPos.x,tbPos.y);	-- if self.fSpeed == 1.3 and fNewSpeed == 4 then		-- _info(debug.traceback())		-- _info("===SetNewSpeed 2===",self.objMon:GetRoleID(),self.bIsMoving,fNewSpeed,self.fSpeed)		-- _info("======",self.objMon:GetSystem("CMonsterSkillSystem"):GetInfo().dwMoveForbidFlag)	-- end	-- _info("===SetNewSpeed 3===",self.vPos.x,self.vPos.y)		local fNewSpeed = self.objMon:GetSystem("CMonsterSkillSystem"):GetInfo().dwMoveSpeed;		-- local tmDis = 0;	-- local tbPos = self:GetVPos();	-- if self.bIsMoving then		-- tmDis = GetCurTime() - self.dwLastWalkStartTime;	-- end		-- print("@@@SetNewSpeed 1===",self.objMon:GetRoleID())	-- print("@@@SetNewSpeed 2===",self.vPos.x,self.vPos.y,tbPos.x,tbPos.y)	-- print("@@@SetNewSpeed 3===",fNewSpeed,self.bIsMoving,tmDis)		if fNewSpeed == 0 then		self:StopMove();	else		if self.bIsMoving then			-- self:StopMove()			-- self:StartMove(self.vTarget.x,self.vTarget.y);			_ChangeSpeed(self.objMon.dwLogicID,fNewSpeed*100);		end	endendfunction CMonsterMoveSystem:DoneWithSpeedChange(fNewSpeed,tbPosNow)	-- print("!!!DoneWithSpeedChange 1==",self.objMon:GetRoleID(),tbPosNow.x,tbPosNow.y)	-- print("!!!DoneWithSpeedChange 2==",fNewSpeed*1000)	-- print("!!!DoneWithSpeedChange 3==",self.vTarget.x,self.vTarget.y)	self:SetPos(tbPosNow.x,tbPosNow.y);	self.fSpeed = fNewSpeed*1000;		self.dwLastWalkStartTime = GetCurTime();		local objMon = self:GetMon()	local Map = objMon:GetMap()	local dwObjId = objMon:GetRoleID()	if Map then		-- local setNet = {}		local szMsgName = "MonsterMoveMsg"		local tParam = 		{			DwMonsterObjId = dwObjId,			PosX = math.floor(self.vTarget.x*100),			PosY = math.floor(self.vTarget.y*100),			FSpeed = self.fSpeed,			FDir = self.fDir,		}				_mapcallout(szMsgName,tParam, objMon.dwLogicID, true)	endend;function CMonsterMoveSystem:BeginCompelMove(dwDelay,tbMoveToPos)	local objMap = self:GetMon():GetMap();		self.tbMoveActionInfo = {};		local posDis = {};	posDis.x = tbMoveToPos.x - self.vPos.x;	posDis.y = tbMoveToPos.y - self.vPos.y;		self.tbMoveActionInfo.dwBegin = GetCurTime();	self.tbMoveActionInfo.dwTime = dwDelay;	self.tbMoveActionInfo.vecDis = posDis;		objMap:AddTimeEvent(dwDelay,function()		self:DoneWithCompelEnd(tbMoveToPos);	end)end;function CMonsterMoveSystem:DoneWithCompelEnd(tbMoveToPos)	self.tbMoveActionInfo = nil;		self:DoneWithMoveEnd(tbMoveToPos);end;