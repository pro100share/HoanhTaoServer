--[[功能：婚姻系统类型：继承于CSystem类，用来管理玩家婚姻相关功能版本：	v1.0	2012-03-05 create by lkj]]_G.CMarriageSystem = {};---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------外部系统调用接口-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------判断玩家是否已婚function CMarriageSystem:IsMarried()	return self.Married;end;--获得自己配偶名字，无配偶返回""不是nilfunction CMarriageSystem:GetMateName()	return self.MateName;end;--获得自己配偶RoleID，无配偶返回0function CMarriageSystem:GetMateRoleID()	return self.MateRoleID;end;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------new()function CMarriageSystem:new()	local obj = CSystem:new("CMarriageSystem");	--方法复制	for index, value in pairs(CMarriageSystem) do		if type(value) == "function" then			obj[index] = value;		end;	end;	return obj;end;--create()function CMarriageSystem:Create(bIsChangeLine)	--每个系统创建时都会挂接到自己的管理者player身上	local objPlayer = self:GetPlayer();	if not objPlayer then		_err("CMarriageSystem Create Cannot get player");		return false;	end;	--婚姻系统需要调用player的基础道具系统	self.ItemSystem = objPlayer:GetSystem("CItemSystem");	if not self.ItemSystem then		_err("CMarriageSystem Create Cannot get itemsystem");		return false;	end;	--初始化DB模块	local objDB = objPlayer:GetDBQuery();	if not objDB then		_err("CMarriageSystem Create Cannot get DBQuery");		return false;	end;	self.objDBQuery = CMarriageSystemDB:new(objDB, self);		--获得属性	local Datas = objPlayer:GetLineData("CMarriageSystem") or {};	local DataKS = objPlayer:GetLineData("CMarriageSystem_KS") or {};		local v = DataKS[1];	if v then		self.Married 			= v[1];--玩家是否已婚		self.MateRoleID 		= v[2];--玩家配偶RoleID		self.MateName			= v[3];--玩家配偶Name		self.MarriedTime		= v[4];--玩家结婚时间		self.dwLove				= v[5];--亲密度        self.MateIsOnline 		= v[6] or false;--配偶是否在线        self.BeProposeToList 	= v[7] or {};	--被求婚列表        self.ProposeToList 		= v[8] or {};	--向谁求婚列表        self.HasKeepSakeNotTake = v[9] or false;--是否有未取回信物		self.MarryChange		= v[10];	--玩家婚姻是否有变动，有数字则为有变动		self.sFormerName		= v[11];	else		_err("get line data 1 error");		return false;	end;		v = Datas[1];	if v then		self.GiveMoneyList 		= v[1];	--玩家赠送礼金列表		self.EatBanquetList		= v[2];	--玩家吃婚宴列表		self.LastEatTime		= v[3];	--玩家上次吃婚宴时间		self.EatTimes 			= 0;	--自己今天吃了几次婚宴		for k, v in pairs(self.EatBanquetList) do			for k1, v1 in pairs(v) do				self.EatTimes = self.EatTimes + 1;			end;		end;	else		_err("get line data 2 error");		return false;	end;    	local pos = 2;	v = Datas[pos];	self.ChatInfo = {};	while v do		for k1, v1 in ipairs(v) do			table.insert(self.ChatInfo, v1);		end;		pos = pos + 1;		v = Datas[pos];	end;        --玩家性别    self.bIsMale    = _G.MarriageSex[objPlayer:GetInfo().dwProf];	--震他一下CD	self.AnnoyCD = 0;	--查看伴侣信息CD	self.LookMateCD = 0;        --得到信物更改信息	if self.MarryChange then		if self.MarryChange == 0 then--如果等于0则通知你被甩了			self:BeCompelDivorceToOffline();            self.MarryChange = nil;		else--不然就是配偶更换新的结婚信物了，好幸福哦~			self:KeepsakeBeChangedOffLine(self.MarryChange);            self.sFormerName = nil;		end;	end;		return true;end;--update()function CMarriageSystem:Update(dwInterval)	if not self.dwAddLoveTime then		return;	end		local dwNowTime = GetCurTime(1)	if dwNowTime > self.dwAddLoveTime then		self.dwAddLoveTime = dwNowTime + _G.MarriageConfig.AddLoveCD;		self:AddLove(_G.MarriageConfig.AddLoveValue, true);		local mate = self:GetPlayer():GetOtherPlayer(self.MateRoleID, 2);		mate:GetSystem("CMarriageSystem"):AddLove(_G.MarriageConfig.AddLoveValue);	end;	return true;end;--destroy()function CMarriageSystem:Destroy()	local objPlayer = self:GetPlayer();	if not objPlayer then		_err("can not find player by CMarriageSystem:Destroy()");		return;	end;	if not self.ChangeLine then		--下线拒绝未处理的求婚		for k, v in pairs(self.BeProposeToList) do			_G.GSRemoteCall(k, "CMarriageSystem", "ProposeRefused", {objPlayer:GetRoleID(), objPlayer:GetInfo().szRoleName}, nil);		end;		if self.Married then			_G.GSRemoteCall(self.MateRoleID, "CMarriageSystem", "BeNoticeMateOffline", nil, nil);		end;		if self.HasKeepSakeNotTake then			self:RepossessKeepsake(false);		end;	end;	if self.bSameMap then		local mate = objPlayer:GetOtherPlayer(self.MateRoleID, 2);		mate:GetSystem("CMarriageSystem"):NotInSameMap();	end;end;--进入地图事件function CMarriageSystem:OnEnterScene()	local objPlayer = self:GetPlayer();	if not objPlayer then		_err("get player error");		return;	end;	--向客户端同步自己婚姻信息	self:SynMarriageInfo(true)	--检测伴侣是否在线，给客户端同步在线信息。	if self.Married then		self:CheckMateIsOnline();	end;	--向客户端同步自己的夫妻聊天记录	if self.ChatInfo then		objPlayer.MarSys_SynChatMsg{ChatInfo = self.ChatInfo};		self.ChatInfo = nil;	end;    if self.MarryChange then        --通知客户端信物被更换        self:NoticeKeepsakeBeChanged();        self.MarryChange = nil;    end;    if self.sFormerName then        self:NoticeBeCompelDivorce(self.sFormerName);        self.sFormerName = nil;    end;    local addLoveNum = objPlayer:GetSystem("CRefreshSystem"):GetData(0901);    objPlayer.MarSys_AddLoveResultMsg{AddNum = addLoveNum};end;--切换场景，换线的时候function CMarriageSystem:OnChangeSceneEnd()	self:CheckLoveAddCond()end;--系统换线开始function CMarriageSystem:OnChangeLineBegin(dwLine)	local objPlayer = self:GetPlayer();	if not objPlayer then		_err("error");		return	end;	self.ChangeLine = true;		----------1----------	--婚姻信息	local Data1 = {};	Data1.pos = 1;	Data1[1] = self.Married;			--玩家是否已婚	Data1[2] = self.MateRoleID;			--玩家配偶RoleID	Data1[3] = self.MateName;			--玩家配偶Name	Data1[4] = self.MarriedTime;		--玩家结婚时间	Data1[5] = self.dwLove;				--亲密度	----------2----------	--运行时数据	Data1[6] = self.MateIsOnline;		--配偶是否在线	Data1[7] = self.BeProposeToList;	--被求婚列表	Data1[8] = self.ProposeToList;		--向谁求婚列表	Data1[9] = self.HasKeepSakeNotTake;	--是否有未取回信物	objPlayer:SetLineData("CMarriageSystem_KS", Data1);	----------3----------	--赠送礼金列表	local Data2 = {};	Data2.pos = 2;	Data2[1] = self.GiveMoneyList;		--玩家赠送礼金列表	----------4----------	--吃婚宴列表	Data2[2] = self.EatBanquetList;		--玩家吃婚宴列表	Data2[3] = self.LastEatTime;		--玩家上次吃婚宴时间		objPlayer:SetLineData("CMarriageSystem", Data2);end;--系统换线结束function CMarriageSystem:OnChangeLineEnd(dwLine)end;--事件中心function CMarriageSystem:OnEventCenter(szEventName,Param1,Param2)	--人物升级学习结婚技能	if szEventName == 'EventLevelUp' and self:IsMarried() then		local objPlayer = self:GetPlayer();		if not objPlayer then			_err("cannot get objPlayer");			return;		end;		local skillSystem = objPlayer:GetSystem("CSkillSystem");		if not skillSystem then			_err("cannot get skillSystem");			return;		end;		if Param2 >= _G.MarriageConfig.Marriage_SkillID2_NeedLevel and (not skillSystem.setAllSkill[_G.MarriageConfig.Marriage_SkillID2]) then			skillSystem:DoAddSkill(_G.MarriageConfig.Marriage_SkillID2);		end;		if Param2 >= _G.MarriageConfig.Marriage_SkillID3_NeedLevel and (not skillSystem.setAllSkill[_G.MarriageConfig.Marriage_SkillID3]) then			skillSystem:DoAddSkill(_G.MarriageConfig.Marriage_SkillID3);		end;		if Param2 >= _G.MarriageConfig.Marriage_SkillID4_NeedLevel and (not skillSystem.setAllSkill[_G.MarriageConfig.Marriage_SkillID4]) then			skillSystem:DoAddSkill(_G.MarriageConfig.Marriage_SkillID4);		end;	endend----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------向客户端同步自己婚姻信息function CMarriageSystem:SynMarriageInfo(b_IsLogin)	local objPlayer = self:GetPlayer();	if not objPlayer then		_err("can not find player by CMarriageSystem:SynMarriageInfo()");		return;	end;	local RoleInfo = objPlayer:GetInfo();	local IsMale = _G.MarriageSex[RoleInfo.dwProf];	--头顶称号	local str = self.MateName;	if self.Married then		if IsMale then			str = string.format(_G.MarriageConfig.IsHusband, str);		else			str = string.format(_G.MarriageConfig.IsWife, str);		end;	end;	objPlayer:GetSystem("PlayerShowTextSystem"):SetLoverText(str);	--同步客户端	objPlayer.MarSys_SynchronizeMsg{		Married		= self.Married, 		MateRoleID	= self.MateRoleID, 		MateName	= self.MateName, 		MarriedTime = self.MarriedTime,		Love		= self.dwLove	};end;