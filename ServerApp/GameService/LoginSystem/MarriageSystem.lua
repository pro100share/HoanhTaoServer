local function ParseStr(str, t)	local lastIndex = 0;	while true do		local nextIndex = lastIndex + 1;		lastIndex = string.find(str, ";", nextIndex)		if not lastIndex then break end;		local str1 = string.sub(str, nextIndex, lastIndex - 1);		local m = string.find(str1, ",", 1);		if not m then			_err("----------------");		end;		local str2 = string.sub(str1, 1, m - 1);		local str3 = string.sub(str1, m + 1);		local key = tonumber(str2);		local value = tonumber(str3);		if not key or not value then			_err("!@#!$%%", str2, str3);		end;        if not t[key] then            t[key] = {};        end;		t[key][value] = true;	end;end;local function func(objPlayer,tbInfoList,isNewRole)	local dwAccountID = objPlayer:GetAccountID();	local dwRoleID = objPlayer:GetRoleID();		local Data2 = {};	--从数据库中读取赠送礼金列表    local listInfo1 = {};	local dbres1 = tbInfoList[1]--objPlayer:GetDBQuery():execute('select "BanquetID", "GiftMoney" from "T_Role_MarriageGiftMoney" where "GuestRoleID" = $1', dwRoleID);    if #(dbres1) > 0 then        for k, v in ipairs(dbres1) do			listInfo1[v.BanquetID] = v.GiftMoney;		end;    end;    Data2[1] = listInfo1;	--从数据库中读取吃婚宴列表    local listInfo2 = {};	local lastEatTime = _now();	local dbres2 = tbInfoList[2]--objPlayer:GetDBQuery():execute('select * from "T_Role_MarriageRoleEatInfo" where "RoleID" = $1', dwRoleID);    if #(dbres2) > 0 then		--如果上次吃是今天，则数据库中数据有效		if _G.CTimeFormat:isToday(dbres2[1].LastEatTime) then			local str = dbres2[1].NpcInfo;            local t = {}            ParseStr(str, listInfo2);			lastEatTime = dbres2[1].LastEatTime;		else--不是今天了，数据无效清空			local SqlCmd = objPlayer:GetDBQuery():CreateUpdateCmd("T_Role_MarriageRoleEatInfo");			SqlCmd.Wheres.RoleID		= dwRoleID;			SqlCmd.Fields.LastEatTime	= lastEatTime;			SqlCmd.Fields.NpcInfo		= "";			SqlCmd:execute();		end;    else--if isNewRole then        local SqlCmd = objPlayer:GetDBQuery():CreateInsertCmd("T_Role_MarriageRoleEatInfo"); 		SqlCmd.Fields.RoleID		= dwRoleID;		SqlCmd.Fields.LastEatTime	= lastEatTime;		SqlCmd.Fields.NpcInfo		= "";		SqlCmd:execute();    end;    Data2[2], Data2[3] = listInfo2, lastEatTime;	CTransitManager:RecvData(dwAccountID,"CMarriageSystem", Data2);		--从数据库中读取夫妻聊天信息    local chatInfo = {};	local dbres3 = tbInfoList[3]--objPlayer:GetDBQuery():execute('select * from "T_Role_MarriageChatList" where "n_RoleID" = $1 order by "n_Time" desc Limit $2', dwRoleID, _G.MarriageConfig.MaxChatNum);    if #(dbres3) > 0 then		for k, v in ipairs(dbres3) do			local tt = {};			tt.b_Recv	= v.b_Recv;			tt.sendTime	= v.n_Time;			tt.text		= v.s_MsgText;			table.insert(chatInfo, tt); 		end;		if dbres3[_G.MarriageConfig.MaxChatNum] then			--objPlayer:GetDBQuery():execute('delete from "T_Role_MarriageChatList" where "n_RoleID" = $1 and "n_Time" < $2', dwRoleID, dbres3[_G.MarriageConfig.MaxChatNum].n_Time);		end;    end;	--		CTransitManager:RecvData(dwAccountID,"CMarriageSystem", chatInfo);		return true;end;CLoginCall:AddCall("CMarriageSystem",func);