--[[	掉落控制	周长沙	2012-3-12--]]_G.CDropControlEx ={}-----------------------------------------------------字符串切割，参数： 源字符串，切割符--返回：切割后的表function _G.Split(szFullString, szSeparator)	local nFindStartIndex = 1	local nSplitIndex = 1	local nSplitArray = {}	while true do	   local nFindLastIndex = string.find(szFullString, szSeparator, nFindStartIndex)	   if not nFindLastIndex then			nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, string.len(szFullString))			break	   end	   nSplitArray[nSplitIndex] = string.sub(szFullString, nFindStartIndex, nFindLastIndex - 1)	   nFindStartIndex = nFindLastIndex + string.len(szSeparator)	   nSplitIndex = nSplitIndex + 1	end	return nSplitArrayend-----------------------------------------------------初始化function CDropControlEx:Init()	self.Line = {}	self:Resolve()	self:SetTime()	return trueend-----------------------------------------------------插入一条掉落信息function CDropControlEx:Insert(dwDropId,tbDrop)	self.Line[dwDropId] = tbDropend--解析一个掉落信息function CDropControlEx:ResolveLine(Line)	local tbLineInfo = {}	local Nodes = Split(Line,";")	for dwPos,Node in pairs(Nodes) do		local Values =  Split(Node,",")		if #Values >= 8 then			local tbInfo = {}			tbInfo.dwTaskId 			= Values[1]			tbInfo.dwPriority 			= Values[2]			tbInfo.dwTeamId 			= Values[3]			tbInfo.dwProbability 		= Values[4]			tbInfo.dwMin 				= Values[5]			tbInfo.dwMax 				= Values[6]			tbInfo.dwItemId 			= Values[7]			tbInfo.dwQuality 			= Values[8]			tbInfo.dwStrongMin			= Values[9]			tbInfo.dwStrongMax			= Values[10]			tbInfo.dwBindType			= Values[11] or 0			tbLineInfo[dwPos] = CConfigNode:new(tbInfo)		end	end	return tbLineInfoend--解析所有掉落信息function CDropControlEx:Resolve()	for dwId,Line in pairs(DropConfigEx) do		if type(Line)=="table" and type(Line[1])=="string" then			local tbLineInfo = self:ResolveLine(Line[1])			self:Insert(dwId,CConfigLine:new(tbLineInfo))		end	endend--处理时间function CDropControlEx:SetTime()	for k,v in pairs(DropExConfig) do		local Start = v.Start or {}		local End = v.End or {}		local dwStart = _time(1, Start)		local dwEnd = _time(1, End)		DropExConfig[k].dwStartTime = dwStart		DropExConfig[k].dwEndTime = dwEnd	endend-----------------------------------------------------获取一条掉落信息function CDropControlEx:GetDrop(dwDropId)	return self.Line[dwDropId]end--获得所有掉落信息function CDropControlEx:GetAll()	return self.Lineend-------------------------------------------------------执行一条掉落function CDropControlEx:DoDrop(dwDropId,dwRoleId,dwPer)	local dwPer = dwPer or 1	local Line = self:GetDrop(dwDropId)	if Line then		return Line:DoDrop(dwRoleId,dwLevel,dwQuality,dwPer)	end	return {}end------------------------------------------------------摇奖礼包获得物品(也用于罐子确定奖励物品)function CDropControlEx:DoGet(dwDropId)	local Line = self:GetDrop(dwDropId)	if Line then		return Line:DoGet()	end	return {}end--摇奖罐子，获得所有配置的物品function CDropControlEx:DoAllGet(dwDropId)	local Line = self:GetDrop(dwDropId)	if Line then		return Line:DoAllGet()	end	return {}end----------------------------------------------------------热更接口function CDropControlEx:ReLoad()	--print("Start ReLoad Drop Ex")	local szPath = "../Data/"	dofile(szPath..'DropEx/Include.lua')	self:Init()	--print("Finish ReLoad Drop Ex")end--------------------------------------------------------CDropControlEx:Init()