--[[	掉落配置 行节点	周长沙	2012-3-12--]]_G.CConfigLine = {}---------------------------------------------local function CopyTable(T)	local newT = {}	for k,v in pairs(T) do		if type(v)=="table" then			newT[k] = CopyTable(v)		else			newT[k] = v		end	end	return newTend---------------------------------------------function CConfigLine:new(ConfigNodes)	local obj = {}	obj.Nodes = ConfigNodes	--单	obj.Single = {}	--双	obj.Excesive = {}	--权重	obj.dwPriority = 0	obj.PriorityControl = {}		for k,v in pairs(CConfigLine) do		if type(v)=="function" then			obj[k]=v		end	end	obj:Resolve()	return objend--获得一个节点function CConfigLine:GetNode(dwId)	return self.Nodes[dwId]end--获得所有节点function CConfigLine:GetAllNode()	local Nodes = {}	local My = CopyTable(self.Nodes)	while #Nodes<16 do		local dwPriority=0		for k,v in pairs(My) do			dwPriority = dwPriority + v.dwPriority		end		local function Mysort(a,b)			return a.dwPriority >= b.dwPriority		end		--table.sort(My,Mysort)		local rand = math.random(0,dwPriority)		for i=1,#My do			--print(i,My[i].dwPriority,rand)			if My[i].dwPriority >=rand then				table.insert(Nodes,My[i])				table.remove(My,i)				break;			else				rand = rand - My[i].dwPriority			end		end	end	return Nodesend--自我解析function CConfigLine:Resolve()	for dwPos,Node in pairs(self.Nodes) do		if Node:IsSingle() then			table.insert(self.Single,Node)		else			table.insert(self.Excesive,Node)		end	end	for i=1,#self.Excesive do		self.dwPriority = self.dwPriority + self.Excesive[i]:GetPriority()		self.PriorityControl[i] = self.dwPriority	endend--执行掉落function CConfigLine:DoDrop(dwRoleId,dwLevel,dwQuality,dwPer)	local dwRoleId = dwRoleId or 0	local dwLevel = dwLevel or 0	if dwLevel >= 16 then		return {}	end	local tbItems = {}	--独立掉落	for _,Node in pairs(self.Single) do		local tbSingleItem = Node:DoDrop(dwRoleId,dwLevel+1,dwQuality,dwPer)		for k,v in pairs(tbSingleItem) do			table.insert(tbItems,v)		end	end	--权重掉落	if self.dwPriority > 0 then		local dwRand = math.random(1,self.dwPriority)		for i=1,#self.PriorityControl do			if self.PriorityControl[i] >= dwRand then				--权重概率				local dwRand = math.random(1,10000)				if self.Excesive[i]:GetProbability() >= dwRand then					local tbExcesiveItem = self.Excesive[i]:DoDrop(dwRoleId,dwLevel+1,dwQuality,dwPer)					for k,v in pairs(tbExcesiveItem) do						table.insert(tbItems,v)					end				end				break;			end		end	end	return tbItemsend--摇奖礼包获得物品function CConfigLine:DoGet()	return self:GetAllNode()	--[[	local dwRand = math.random(1,self.dwPriority)	for i=1,#self.PriorityControl do		if self.PriorityControl[i] >= dwRand then			--权重概率			local dwRand = math.random(1,10000)			if self.Excesive[i]:GetProbability() >= dwRand then				print(self.Excesive[i]:GetTeamId())				return CDropControl:GetDrop(self.Excesive[i]:GetTeamId()):GetAllNode()			end		end	end	--]]end--摇奖罐子，获得所有配置的物品function CConfigLine:DoAllGet(dwLevel,dwQuality)	local dwLevel = dwLevel or 0	if dwLevel >= 16 then		return {}	end	local Item = {}	for _,Node in pairs(self.Single) do		local Info = Node:DoGet(dwLevel+1,dwQuality)		for _,Node in pairs(Info) do			table.insert(Item,Node)		end	end	for _,Node in pairs(self.Excesive) do		local Info = Node:DoGet(dwLevel+1,dwQuality)		for _,Node in pairs(Info) do			table.insert(Item,Node)		end	end	return Itemend