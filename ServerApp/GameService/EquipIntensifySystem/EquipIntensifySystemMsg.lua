--[[功能：装备强化系统消息处理版本：	v1.0 2012-02-16 create by lkj]]_define()--客户端强化装备请求define.EISys_IntensifyEquipMsg{	user = NONE,	QuestTable = {		ItemInstId 		= 0,		--要强化的装备的实例Id		UseXYStoneNum	= 0,		--使用幸运石个数		IsUseBDStone	= false,	--是否使用保底石		IsUseNotBindFirst	= false,	--是否优先使用非绑定装备		IsAutoBuy		= false,		IsUseGold		= true,--是否使用元宝	},}when{user = NONE}EISys_IntensifyEquipMsg = checkUser;when{}function EISys_IntensifyEquipMsg(user, QuestTable)	if user then		local objEquipIntensifySystem = user:GetSystem("CEquipIntensifySystem");		if objEquipIntensifySystem then			--参数有效性检查			if (type(QuestTable.ItemInstId) ~= 'number') then print("--1--")  return end;			if (type(QuestTable.UseXYStoneNum) ~= 'number') or (QuestTable.UseXYStoneNum < 0) or (QuestTable.UseXYStoneNum > 9) then print("--2--") return end;			-- if (type(QuestTable.IsUseBDStone) ~= 'boolen') then return end;			if (type(QuestTable.IsUseNotBindFirst) ~= 'boolean') then print("--3--")  return end;			if (type(QuestTable.IsAutoBuy) ~= 'boolean') then print("--4--")  return end;			if (type(QuestTable.IsUseGold) ~= 'boolean') then print("--5--")  return end;			objEquipIntensifySystem:IntensifyEquip(QuestTable);		else			_err("can not find user's CEquipIntensifySystem by EISys_IntensifyEquipMsg");		end;	end;end;--客户端装备升阶请求define.EISys_LevelUpEquipMsg{	user = NONE,	QuestTable = {		ItemInstId 		= 0,		--要升阶的装备的实例Id		IsUseBXStone 	= false,	--是否使用冰星石		IsUseFHStone	= false,	--是否使用封魂石		IsUseNotBindStoneFirst	= false,	--是否优先使用非绑定装备		IsAutoBuy		= false,	},}when{user = NONE}EISys_LevelUpEquipMsg = checkUser;when{}function EISys_LevelUpEquipMsg(user, QuestTable)	local objEquipIntensifySystem = user:GetSystem("CEquipIntensifySystem");	if not objEquipIntensifySystem then 		_err("can not find user's CEquipIntensifySystem by EISys_LevelUpEquipMsg");		return; 	end;	objEquipIntensifySystem:LevelUpEquip(QuestTable);end;--客户端强化装备天生属性请求define.EISys_IntensifyBornPropMsg{	user = NONE,	QuestTable = {		ItemInstId 		= 0,		--要强化的装备的实例Id		UseXYStoneNum	= 0,		--使用幸运石个数		IsUseNotBindStoneFirst	= false,	--是否优先使用非绑定材料		IsAutoBuy		= false,	},}when{user = NONE}EISys_IntensifyBornPropMsg = checkUser;when{}function EISys_IntensifyBornPropMsg(user, QuestTable)	local objEquipIntensifySystem = user:GetSystem("CEquipIntensifySystem");	if not objEquipIntensifySystem then 		_err("can not find user's CEquipIntensifySystem by EISys_IntensifyBornPropMsg");		return; 	end;	objEquipIntensifySystem:IntensifyBornProp(QuestTable);end;--客户端重置装备附加属性请求define.EISys_AppendPropMsg{	user = NONE,	QuestTable = {		ItemInstId 		= 0,		--要强化的装备的实例Id		IsUseNotBindStoneFirst	= false,	--是否优先使用非绑定材料		IsAutoBuy		= false,		IsUseGold		= true,--是否使用元宝	},}when{user = NONE}EISys_AppendPropMsg = checkUser;when{}function EISys_AppendPropMsg(user, QuestTable)	local objEquipIntensifySystem = user:GetSystem("CEquipIntensifySystem");	if not objEquipIntensifySystem then 		_err("can not find user's CEquipIntensifySystem by EISys_AppendPropMsg");		return; 	end;	objEquipIntensifySystem:AppendProp(QuestTable);end;--客户端选择新/老附加属性请求define.EISys_UserChoosePropMsg{	user = NONE,	ChooseNew = false,	--用户选择保留新属性}when{user = NONE}EISys_UserChoosePropMsg = checkUser;when{}function EISys_UserChoosePropMsg(user, ChooseNew)	local objEquipIntensifySystem = user:GetSystem("CEquipIntensifySystem");	if not objEquipIntensifySystem then 		_err("can not find user's CEquipIntensifySystem by EISys_UserChoosePropMsg");		return; 	end;	objEquipIntensifySystem:UserChooseProp(ChooseNew);end;--客户端重置装备附加属性类型请求define.EISys_ResetAppendPropTypeMsg{	user = NONE,	QuestTable = {		ItemInstId 		= 0,		--要强化的装备的实例Id		PropIndex		= 0,		----玩家选择重置哪条属性		IsUseNotBindStoneFirst	= false,	--是否优先使用非绑定材料		IsAutoBuy		= false,	},}when{user = NONE}EISys_ResetAppendPropTypeMsg = checkUser;when{}function EISys_ResetAppendPropTypeMsg(user, QuestTable)	local objEquipIntensifySystem = user:GetSystem("CEquipIntensifySystem");	if not objEquipIntensifySystem then 		_err("can not find user's CEquipIntensifySystem by EISys_ResetAppendPropTypeMsg");		return; 	end;	objEquipIntensifySystem:ResetAppendPropType(QuestTable);end;--客户端增加装备附加属性数值请求define.EISys_AddAppendPropValueMsg{	user = NONE,	QuestTable = {		ItemInstId 		= 0,		--要强化的装备的实例Id		UseXYStoneNum	= 0,		--使用幸运石个数		IsUseNotBindStoneFirst	= false,	--是否优先使用非绑定材料		IsAutoBuy		= false,	},}when{user = NONE}EISys_AddAppendPropValueMsg = checkUser;when{}function EISys_AddAppendPropValueMsg(user, QuestTable)	local objEquipIntensifySystem = user:GetSystem("CEquipIntensifySystem");	if not objEquipIntensifySystem then 		_err("can not find user's CEquipIntensifySystem by EISys_AddAppendPropValueMsg");		return; 	end;	objEquipIntensifySystem:AddAppendPropValue(QuestTable);end;local t_BroadCastLevel = {	[1] = _G.BroadCastConfig.EquipIntensify;	[2] = _G.BroadCastConfig.PropResetAll;	[3] = _G.BroadCastConfig.EquipAddBorn;	[4] = _G.BroadCastConfig.EquipUpgrade;	[5] = _G.BroadCastConfig.PropResetType;	[6] = _G.BroadCastConfig.PropIntensify;};----广播define.EISys_BroadCastMsg{	Type 		= 0,	PlayerName	= "",	PlayerRoleID= 0,	ItemNetData	= {},	Info		= {}}when{}function EISys_BroadCastMsg(Type, PlayerName, PlayerRoleID, ItemNetData, Info)	local n_BroadCastLevel = t_BroadCastLevel[Type];    local setNet = {};	for i,objPlayer in pairs(CPlayerManager.setAllPlayer) do		if objPlayer:GetInfo().dwLevel >= n_BroadCastLevel then            table.insert(setNet, objPlayer.objNet);		end;	end;     _groupcallout(setNet, "EISys_BroadCastMsg", {Type = Type, PlayerName = PlayerName, PlayerRoleID = PlayerRoleID, ItemNetData = ItemNetData, Info = Info});end;--使用强化卷轴define.EISys_AppointLevelMsg{	user = NONE,	EquipID = 0;--装备ID 	ItemID = 0;}when{user = NONE}EISys_AppointLevelMsg = checkUser;when{}function EISys_AppointLevelMsg(user, EquipID, ItemID)	if user then		local objEquipIntensifySystem = user:GetSystem("CEquipIntensifySystem");		if not objEquipIntensifySystem then 			_err("can not find user's CEquipIntensifySystem by EISys_AppointLevelMsg");			return; 		end;		-- print("copy AppointLevelMsg!")				local itemInst = objEquipIntensifySystem.ItemSystem:GetItem(ItemID);		local scrollType = _G.EquipIntensifyConfig.ScrollEnumIDToType[itemInst:GetEnumID()];				-- print("scrollType is "..scrollType)				if scrollType == ScrollTypeEnum.Strong then			objEquipIntensifySystem:AppointLevel(user, EquipID, ItemID);		elseif scrollType == ScrollTypeEnum.WashType then			objEquipIntensifySystem:WashPropType(user, EquipID, ItemID) ;		elseif scrollType == ScrollTypeEnum.WashValue then			objEquipIntensifySystem:WashPropValue(user, EquipID, ItemID);		end				--objEquipIntensifySystem:AppointLevel(user, EquipID, ItemID);	end;end;----卷轴广播define.EISys_ScrollBroadCastMsg{	PlayerName	= "",	PlayerRoleID= 0,	ItemNetData	= {},	ScrollID	= 0,}when{}function EISys_ScrollBroadCastMsg(PlayerName, PlayerRoleID, ItemNetData, ScrollID)    local setNet = {};	for i,objPlayer in pairs(CPlayerManager.setAllPlayer) do		if objPlayer:GetSystem("CAuthoritySystem"):HasAuthority("EquipIntensify") then            table.insert(setNet, objPlayer.objNet);		end;	end;     _groupcallout(setNet, "EISys_ScrollBroadCastMsg", {PlayerName = PlayerName, PlayerRoleID = PlayerRoleID, ItemNetData = ItemNetData, ScrollID = ScrollID});end;