_G.CMissionDailyMgr = CSingle:new();CSingleManager:AddSingle(CMissionDailyMgr);--createfunction CMissionDailyMgr:Create()		--初始化计时器	CAlarmClock:AddTask({dwTime = "24:00"}, CAlarmTaskCycleType.eDay, 1, 0,		function() self:ResetDayValue() end, {}	)	CAlarmClock:AddTask({dwWeek = "6", dwTime = "24:00"}, CAlarmTaskCycleType.eWeek, 1, 0,		function() self:ResetWeekValue() end, {}	)	return true;end;--updatefunction CMissionDailyMgr:Update(dwInterval)	return true;end;--destroyfunction CMissionDailyMgr:Destroy()end;local function SetFormat(T)	local t = Table:DeepCopy(T)	if t == 0  then		return ''	end	local str = '';	local tempParam = '';	while true do		tempParam = table.remove(t);		if tempParam == nil then			break;		end		str = tempParam..'&'..str	end	return str;end	------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------对外接口--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------重置function CMissionDailyMgr:ResetDayValue()	local tInfo ={}	for k,v in ipairs(MissionDailyConfig.EventConfig) do		tInfo[k] = 0	end	local sql = [[update "T_Role_MissionDaily" set "dwOnLineTime" = $1,		"setDailyGift" = $2,"dwActivePoint" = $3 ,"setEventInfo" = $4;]]	CPlayerDBQuery:GetDBQuery():execute(sql, 0, "", 0, SetFormat(tInfo));	for i,objLine in pairs(CGameLineManager:GetAllLine()) do		objLine.GSRemoteCallMsg{System = "CMissionDailySystem", Func = "ResetDayInfo"};	end;	end;function CMissionDailyMgr:ResetWeekValue()	for i,objLine in pairs(CGameLineManager:GetAllLine()) do		objLine.GSRemoteCallMsg{System = "CMissionDailySystem", Func = "ResetWeekInfo"};	end;	end;