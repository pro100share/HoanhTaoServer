---------------------------------------------------------------------------------公会日志数据-------------------------------------------------------------------------------local szTable = 'T_Guild_Log'local tabPrimeKey = { 'dwLogID' }local tabDataKey =  { 'dwGuildID','eType','szText','dwDate' }CGuildDatabase:AddTable(szTable,tabPrimeKey,tabDataKey)-------------------------------------------------------------------------------_G.CGuildLog = CGuildData:inherit()CGuildLog.table = 'T_Guild_Log'function CGuildLog:Create(tabInfo)	self.dwLogID = tabInfo.dwLogID --日志ID	self.dwGuildID = tabInfo.dwGuildID --公会ID	self.eType = tabInfo.eType or enGuildLog.eMember --日志类型	self.szText = tabInfo.szText or '' --日志内容	self.dwDate = tabInfo.dwDate or _now() --日志日期end---------------------------------------------------------------------------------公会日志系统-------------------------------------------------------------------------------_G.CGuildLogMgr = CGuildBaseMgr:inherit()function CGuildLogMgr:Create()	self.tabDataMap = {}	self.tabDataList = {}	local objDB = CGuildDatabase:GetTable('T_Guild_Log')	local tabRes = objDB:Select() or {}	for _,v in pairs(tabRes) do		local objLog = CGuildLog:new(v)		self:Add(objLog)	endendfunction CGuildLogMgr:Add(objLog)	local dwLogID = objLog.dwLogID	self.tabDataMap[dwLogID] = objLog	local dwGuildID = objLog.dwGuildID	local tabList = self.tabDataList[dwGuildID] or {}	tabList[dwLogID] = true	self.tabDataList[dwGuildID] = tabList	return objLogendfunction CGuildLogMgr:Get(dwLogID)	return self.tabDataMap[dwLogID]endfunction CGuildLogMgr:Del(dwLogID)	local objLog = self.tabDataMap[dwLogID]	if not objLog then return end	self.tabDataMap[dwLogID] = nil	local dwGuildID = objLog.dwGuildID	local tabList = self.tabDataList[dwGuildID] or {}	tabList[dwLogID] = nil	self.tabDataList[dwGuildID] = tabList	return objLogendfunction CGuildLogMgr:GetLogList(dwGuildID)	local tabLogList = self.tabDataList[dwGuildID]	local temp = {}	for k,v in pairs(tabLogList or {}) do temp[k] = v end	return tempend-------------------------------------------------------------------------------function CGuildLogMgr:Dismiss(dwGuildID)	local tabLogList = self:GetLogList(dwGuildID)	for dwLogID in pairs(tabLogList) do		self:Del(dwLogID):Delete()	endend-------------------------------------------------------------------------------