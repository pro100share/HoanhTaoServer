---------------------------------------------------------------------------------公会龙鼎数据-------------------------------------------------------------------------------local szTable = 'T_Guild_Trophy'local tabPrimeKey = { 'dwTrophyID' }local tabDataKey =  { 'dwGuildID' }CGuildDatabase:AddTable(szTable,tabPrimeKey,tabDataKey)-------------------------------------------------------------------------------_G.CGuildTrophy = CGuildData:inherit()CGuildTrophy.table = 'T_Guild_Trophy'function CGuildTrophy:Create(tabInfo)	self.dwTrophyID = tabInfo.dwTrophyID --战利品ID	self.dwGuildID = tabInfo.dwGuildID or 0 --公会IDend---------------------------------------------------------------------------------公会龙鼎系统-------------------------------------------------------------------------------_G.CGuildTrophyMgr = CGuildBaseMgr:inherit()function CGuildTrophyMgr:Create()	self.tabDataMap = {}	self.tabDataList = {}	local objDB = CGuildDatabase:GetTable('T_Guild_Trophy')	local tabRes = objDB:Select() or {}	for _,v in pairs(tabRes) do		local objTrophy = CGuildTrophy:new(v)		self:Add(objTrophy)	end	self:Sort()endfunction CGuildTrophyMgr:Add(objTrophy)	local dwTrophyID = objTrophy.dwTrophyID	self.tabDataMap[dwTrophyID] = objTrophy	local dwGuildID = objTrophy.dwGuildID	local tabList = self.tabDataList[dwGuildID] or {}	tabList[dwTrophyID] = true	self.tabDataList[dwGuildID] = tabList	return objTrophyendfunction CGuildTrophyMgr:Get(dwTrophyID)	return self.tabDataMap[dwTrophyID]endfunction CGuildTrophyMgr:Del(dwTrophyID)	local objTrophy = self.tabDataMap[dwTrophyID]	if not objTrophy then return end	self.tabDataMap[dwTrophyID] = nil	local tabList = self.tabDataList[dwGuildID] or {}	tabList[dwTrophyID] = nil	self.tabDataList[dwGuildID] = tabList	return objTrophyendfunction CGuildTrophyMgr:Set(dwTrophyID,dwGuildID)	local objTrophy = self.tabDataMap[dwTrophyID]	if not objTrophy then return end	local tabList = self.tabDataList[objTrophy.dwGuildID] or {}	tabList[dwTrophyID] = nil	self.tabDataList[objTrophy.dwGuildID] = tabList	objTrophy.dwGuildID = dwGuildID	local tabList = self.tabDataList[objTrophy.dwGuildID] or {}	tabList[dwTrophyID] = true	self.tabDataList[objTrophy.dwGuildID] = tabList	return objTrophyendfunction CGuildTrophyMgr:Sort()	local tabTemp = {}	for k,v in pairs(self.tabDataMap) do		local dwCount = tabTemp[v.dwGuildID] or 0		local tabTrophyConfig = GuildTrophyConfig[v.dwTrophyID]		local dwType = tabTrophyConfig.dwTrophyType		local tabTypeConfig = GuildTrophyType[dwType]		dwCount = dwCount + tabTypeConfig.dwAddExp		tabTemp[v.dwGuildID] = dwCount	end	self.tabOrderList = {}	for k,v in pairs(tabTemp) do		table.insert(self.tabOrderList,k)	end	local fnSort = function(a,b)		return tabTemp[a] > tabTemp[b]	end	table.sort(self.tabOrderList,fnSort)endfunction CGuildTrophyMgr:GetOrder()	return self.tabOrderListendfunction CGuildTrophyMgr:GetTrophyList(dwGuildID)	local tabTrophyList = self.tabDataList[dwGuildID]	local temp = {}	for k,v in pairs(tabTrophyList or {}) do temp[k] = v end	return tempend-------------------------------------------------------------------------------