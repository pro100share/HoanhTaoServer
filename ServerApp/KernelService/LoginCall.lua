_G.CLoginCall = {};--登录时的执行函数CLoginCall.setCallFunc = {};--Login发送数据来之后的执行函数CLoginCall.setDataExecFunc = {};--已经加载完成的角色--CLoginCall.setRoleLoadEnd = {};--GS发过来已经可以发送数据的角色CLoginCall.setGSReady = {};---------------------------------------function CLoginCall:AddCall(func)    table.insert(self.setCallFunc, func);end;function CLoginCall:DoLogin(objPlayer)    for _, v in ipairs(self.setCallFunc) do        v(objPlayer);    end;end;-----------------------------------------------------------------------------------角色数据传输完毕-- function CLoginCall:RoleLoginOver(dwAccountID,nSendToLine)	-- print("===CLoginCall:RoleLoginOver===",dwAccountID,self.setGSReady[dwAccountID])	-- local objPlayer = CPlayerManager:GetPlayer(dwAccountID)	-- if not objPlayer then		----KS上没有角色，则GS一定没有		-- CTransitManager:ClearData(dwAccountID);		----现在角色数据已经发送到GS了，需要通知GS删除		-- local objLine = CGameLineManager:GetLine(nSendToLine);		-- if objLine then			-- objLine.KSDelRoleByNoneMsg{AccountID = dwAccountID};		-- end		-- return;	-- end		-- if self.setGSReady[dwAccountID] then		-- CGameLineManager:CreatePlayerSystemBySelect(dwAccountID);				-- self.setGSReady[dwAccountID] = nil;		-- self.setRoleLoadEnd[dwAccountID] = nil;	-- else		-- self.setRoleLoadEnd[dwAccountID] = 1;	-- end-- end;function CLoginCall:GSRoleReady(dwAccountID,objLineNet)	-- print("===CLoginCall:GSRoleReady===",dwAccountID);--,self.setRoleLoadEnd[dwAccountID])	local objPlayer = CPlayerManager:GetPlayer(dwAccountID)	if not objPlayer then		--KS上没有角色，则GS一定没有		CTransitManager:ClearData(dwAccountID);				objLineNet.KSDelRoleByNoneMsg{AccountID = dwAccountID};				-- self.setRoleLoadEnd[dwAccountID] = nil;		-- self.setGSReady[dwAccountID] = nil;		return;	end	CGameLineManager:CreatePlayerSystemBySelect(dwAccountID);		-- if self.setRoleLoadEnd[dwAccountID] then				-- self.setRoleLoadEnd[dwAccountID] = nil;		-- self.setGSReady[dwAccountID] = nil;	-- else		-- self.setGSReady[dwAccountID] = 1;	-- endend;